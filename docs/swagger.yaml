basePath: /restaurante/v1
definitions:
  models.ApiResponse:
    properties:
      cause:
        type: string
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  models.Cliente:
    properties:
      apellido:
        type: string
      direccion:
        type: string
      nombre:
        type: string
      observaciones:
        type: string
      password:
        type: string
      pk_DOCUMENTO_CLIENTE:
        type: integer
      telefono:
        type: string
    type: object
  models.Restaurante:
    properties:
      dias_LABORALES:
        type: string
      hora_APERTURA:
        type: string
      nombre_RESTAURANTE:
        type: string
      pk_ID_RESTAURANTE:
        type: integer
    type: object
host: https://restaurante-back-production.up.railway.app
info:
  contact:
    email: baluisto96@gmail.com
  description: API para gestionar el sistema de un restaurante para "El fogón de María"
  title: Restaurante API
  version: 0.0.1
paths:
  /restaurante/v1/clientes:
    delete:
      consumes:
      - application/json
      description: Elimina un cliente de la base de datos.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Cliente eliminado
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un cliente
      tags:
      - clientes
    get:
      consumes:
      - application/json
      description: Devuelve todos los clientes registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de clientes
          schema:
            items:
              $ref: '#/definitions/models.Cliente'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los clientes
      tags:
      - clientes
    post:
      consumes:
      - application/json
      description: Crea un nuevo cliente en la base de datos.
      parameters:
      - description: Datos del cliente a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Cliente'
      produces:
      - application/json
      responses:
        "201":
          description: Cliente creado
          schema:
            $ref: '#/definitions/models.Cliente'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo cliente
      tags:
      - clientes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un cliente existente.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del cliente a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Cliente'
      produces:
      - application/json
      responses:
        "200":
          description: Cliente actualizado
          schema:
            $ref: '#/definitions/models.Cliente'
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un cliente
      tags:
      - clientes
  /restaurante/v1/clientes/search:
    get:
      consumes:
      - application/json
      description: Devuelve un cliente específico por ID utilizando query parameters.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cliente encontrado
          schema:
            $ref: '#/definitions/models.Cliente'
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener cliente por ID
      tags:
      - clientes
  /restaurante/v1/restaurantes:
    delete:
      consumes:
      - application/json
      description: Elimina un restaurante de la base de datos.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Restaurante eliminado
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un restaurante
      tags:
      - restaurantes
    get:
      consumes:
      - application/json
      description: Devuelve todos los restaurantes registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de restaurantes
          schema:
            items:
              $ref: '#/definitions/models.Restaurante'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los restaurantes
      tags:
      - restaurantes
    post:
      consumes:
      - application/json
      description: Crea un nuevo restaurante en la base de datos.
      parameters:
      - description: Datos del restaurante a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Restaurante'
      produces:
      - application/json
      responses:
        "201":
          description: Restaurante creado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo restaurante
      tags:
      - restaurantes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un restaurante existente.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del restaurante a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Restaurante'
      produces:
      - application/json
      responses:
        "200":
          description: Restaurante actualizado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un restaurante
      tags:
      - restaurantes
  /restaurante/v1/restaurantes/search:
    get:
      consumes:
      - application/json
      description: Devuelve un restaurante específico por ID utilizando query parameters.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restaurante encontrado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener restaurante por ID
      tags:
      - restaurantes
schemes:
- https
swagger: "2.0"
