basePath: /restaurante/v1
definitions:
  models.ApiResponse:
    properties:
      cause:
        type: string
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  models.CambiosHorario:
    properties:
      ABIERTO:
        type: boolean
      FECHA:
        type: string
      HORA_APERTURA:
        type: string
      HORA_CIERRE:
        type: string
      PK_ID_CAMBIO_HORARIO:
        type: integer
    type: object
  models.Cliente:
    properties:
      APELLIDO:
        type: string
      DIRECCION:
        type: string
      NOMBRE:
        type: string
      OBSERVACIONES:
        type: string
      PASSWORD:
        type: string
      PK_DOCUMENTO_CLIENTE:
        type: integer
      TELEFONO:
        type: string
    type: object
  models.Domicilio:
    properties:
      CREATED_AT:
        type: string
      CREATED_BY:
        type: string
      DIRECCION:
        type: string
      ENTREGADO:
        type: boolean
      ESTADO_PAGO:
        type: string
      FECHA:
        type: string
      OBSERVACIONES:
        type: string
      PK_ID_DOMICILIO:
        type: integer
      TELEFONO:
        type: string
      UPDATED_AT:
        type: string
      UPDATED_BY:
        type: string
    type: object
  models.Incidencia:
    properties:
      FECHA:
        type: string
      MONTO:
        type: integer
      MOTIVO:
        type: string
      PK_DOCUMENTO_TRABAJADOR:
        type: integer
      PK_ID_INCIDENCIA:
        type: integer
      RESTA:
        type: boolean
    type: object
  models.LoginRequest:
    properties:
      documento:
        type: integer
      password:
        type: string
    type: object
  models.MetodoPago:
    properties:
      DETALLE:
        type: string
      PK_ID_METODO_PAGO:
        type: integer
      TIPO:
        type: string
    type: object
  models.Nomina:
    properties:
      ESTADO_NOMINA:
        type: string
      FECHA:
        type: string
      MONTO:
        type: integer
      PK_ID_NOMINA:
        type: integer
    type: object
  models.NominaTrabajador:
    properties:
      DETALLES:
        type: string
      MONTO_INCIDENCIAS:
        type: integer
      PK_DOCUMENTO_TRABAJADOR:
        type: integer
      PK_ID_NOMINA:
        type: integer
      PK_ID_NOMINA_TRABAJADOR:
        type: integer
      SUELDO_BASE:
        type: integer
      TOTAL:
        type: integer
    type: object
  models.NominaTrabajadorRequest:
    properties:
      DETALLES:
        example: Pago correspondiente al mes de enero
        type: string
      PK_DOCUMENTO_TRABAJADOR:
        example: 1015466494
        type: integer
    type: object
  models.NominaTrabajadorResponse:
    properties:
      DETALLES:
        example: Pago correspondiente al mes de enero
        type: string
      MONTO_INCIDENCIAS:
        example: 50000
        type: integer
      PK_ID_NOMINA_TRABAJADOR:
        example: 1
        type: integer
      SUELDO_BASE:
        example: 2000000
        type: integer
      TOTAL:
        example: 2050000
        type: integer
    type: object
  models.Pago:
    properties:
      ESTADO_PAGO:
        type: string
      FECHA:
        type: string
      HORA:
        type: string
      MONTO:
        type: integer
      PK_ID_METODO_PAGO:
        type: integer
      PK_ID_PAGO:
        type: integer
      UPDATED_AT:
        type: string
      UPDATED_BY:
        type: string
    type: object
  models.Pedido:
    properties:
      DELIVERY:
        type: boolean
      FECHA:
        type: string
      HORA:
        type: string
      PK_ID_PAGO:
        type: integer
      UPDATED_AT:
        type: string
      UPDATED_BY:
        type: string
      estado_PEDIDO:
        type: string
      pk_ID_DOMICILIO:
        type: integer
      pk_ID_PAGO:
        type: integer
      pk_ID_RESTAURANTE:
        type: integer
    type: object
  models.PedidoCliente:
    properties:
      PK_DOCUMENTO_CLIENTE:
        type: integer
      PK_ID_PEDIDO:
        type: integer
      PK_ID_PEDIDO_CLIENTE:
        type: integer
    type: object
  models.Producto:
    properties:
      CALORIAS:
        type: integer
      CANTIDAD:
        type: integer
      DESCRIPCION:
        type: string
      ESTADO_PRODUCTO:
        type: string
      IMAGEN:
        type: string
      NOMBRE:
        type: string
      PK_ID_PRODUCTO:
        type: integer
      PRECIO:
        type: integer
    type: object
  models.ProductoPedido:
    properties:
      DETALLES_PRODUCTOS:
        description: JSONB para consolidar productos
        type: string
      PK_ID_PEDIDO:
        type: integer
      PK_ID_PRODUCTO_PEDIDO:
        type: integer
    type: object
  models.Reserva:
    properties:
      CREATED_AT:
        type: string
      CREATED_BY:
        type: string
      ESTADO_RESERVA:
        type: string
      FECHA:
        type: string
      HORA:
        type: string
      INDICACIONES:
        type: string
      PERSONAS:
        type: integer
      PK_ID_RESERVA:
        type: integer
      UPDATED_AT:
        type: string
      UPDATED_BY:
        type: string
    type: object
  models.Restaurante:
    properties:
      HORA_APERTURA:
        type: string
      dias_laborales:
        type: string
      nombre_restaurante:
        type: string
      pk_id_restaurante:
        type: integer
    type: object
  models.Trabajador:
    properties:
      APELLIDO:
        type: string
      FECHA_INGRESO:
        type: string
      FECHA_NACIMIENTO:
        type: string
      FECHA_RETIRO:
        type: string
      HORARIO:
        type: string
      NOMBRE:
        type: string
      NUEVO:
        type: boolean
      PASSWORD:
        type: string
      PK_DOCUMENTO_TRABAJADOR:
        type: integer
      PK_ID_RESTAURANTE:
        type: integer
      ROL:
        type: string
      SUELDO:
        type: integer
      TELEFONO:
        type: string
    type: object
info:
  contact:
    email: baluisto96@gmail.com
  description: API para gestionar el sistema de un restaurante para "El fogón de María"
  title: Restaurante API
  version: 2.0.0
paths:
  /cambios_horario:
    delete:
      consumes:
      - application/json
      description: Elimina un cambio de horario de la base de datos.
      parameters:
      - description: ID del cambio de horario
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cambio de horario eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Cambio de horario no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un cambio de horario
      tags:
      - cambios_horario
    get:
      consumes:
      - application/json
      description: Obtiene un listado de todos los cambios de horario registrados
        en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Listado de cambios de horario
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los cambios de horario
      tags:
      - cambios_horario
    post:
      consumes:
      - application/json
      description: Crea un nuevo cambio de horario en la base de datos.
      parameters:
      - description: Datos del cambio de horario
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CambiosHorario'
      produces:
      - application/json
      responses:
        "201":
          description: Cambio de horario creado
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo cambio de horario
      tags:
      - cambios_horario
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un cambio de horario existente.
      parameters:
      - description: ID del cambio de horario
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del cambio de horario a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CambiosHorario'
      produces:
      - application/json
      responses:
        "200":
          description: Cambio de horario actualizado
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Cambio de horario no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un cambio de horario
      tags:
      - cambios_horario
  /cambios_horario/actual:
    get:
      consumes:
      - application/json
      description: Obtiene el cambio de horario que aplica para la fecha actual, si
        existe.
      produces:
      - application/json
      responses:
        "200":
          description: Cambio de horario para la fecha actual
          schema:
            additionalProperties: true
            type: object
        "404":
          description: No hay cambios de horario para la fecha actual
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Consultar cambios de horario para la fecha actual
      tags:
      - cambios_horario
  /clientes:
    delete:
      consumes:
      - application/json
      description: Elimina un cliente de la base de datos.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cliente eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Eliminar un cliente
      tags:
      - clientes
    get:
      consumes:
      - application/json
      description: Devuelve todos los clientes registrados en la base de datos, con
        opción de retornar solo nombre completo y teléfono.
      parameters:
      - description: Cantidad de resultados por página (por defecto es 10)
        in: query
        name: limit
        type: integer
      - description: Número de registros a omitir desde el inicio (por defecto es
          0)
        in: query
        name: offset
        type: integer
      - description: 'Especifica los campos a incluir en la respuesta (opciones: ''nombre_completo_telefono'')'
        in: query
        name: fields
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista de clientes con los campos especificados
          schema:
            items:
              type: object
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todos los clientes con opción de filtrar campos
      tags:
      - clientes
    post:
      consumes:
      - application/json
      description: Crea un nuevo cliente en la base de datos.
      parameters:
      - description: Datos del cliente a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Cliente'
      produces:
      - application/json
      responses:
        "201":
          description: Cliente creado
          schema:
            $ref: '#/definitions/models.Cliente'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear un nuevo cliente
      tags:
      - clientes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un cliente existente.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del cliente a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Cliente'
      produces:
      - application/json
      responses:
        "200":
          description: Cliente actualizado
          schema:
            $ref: '#/definitions/models.Cliente'
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar un cliente
      tags:
      - clientes
  /clientes/search:
    get:
      consumes:
      - application/json
      description: Devuelve un cliente específico por ID utilizando query parameters.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cliente encontrado
          schema:
            $ref: '#/definitions/models.Cliente'
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener cliente por ID
      tags:
      - clientes
  /domicilios:
    delete:
      consumes:
      - application/json
      description: Elimina un domicilio de la base de datos.
      parameters:
      - description: ID del Domicilio
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Domicilio eliminado
        "404":
          description: Domicilio no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Eliminar un domicilio
      tags:
      - domicilios
    get:
      consumes:
      - application/json
      description: Devuelve todos los domicilios registrados en la base de datos,
        con opción de filtrar por dirección, teléfono y actualizado por.
      parameters:
      - description: Filtrar por dirección
        in: query
        name: direccion
        type: string
      - description: Filtrar por teléfono
        in: query
        name: telefono
        type: string
      - description: Filtrar por fecha
        in: query
        name: fecha
        type: string
      - description: Filtrar por usuario que realizó la última actualización
        in: query
        name: updated_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista de domicilios
          schema:
            items:
              $ref: '#/definitions/models.Domicilio'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todos los domicilios con posibilidad de filtrar
      tags:
      - domicilios
    post:
      consumes:
      - application/json
      description: Crea un nuevo domicilio en la base de datos.
      parameters:
      - description: Datos del domicilio a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Domicilio'
      produces:
      - application/json
      responses:
        "201":
          description: Domicilio creado
          schema:
            $ref: '#/definitions/models.Domicilio'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear un nuevo domicilio
      tags:
      - domicilios
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un domicilio existente.
      parameters:
      - description: ID del Domicilio
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del domicilio a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Domicilio'
      produces:
      - application/json
      responses:
        "200":
          description: Domicilio actualizado
          schema:
            $ref: '#/definitions/models.Domicilio'
        "404":
          description: Domicilio no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar un domicilio
      tags:
      - domicilios
  /domicilios/search:
    get:
      consumes:
      - application/json
      description: Devuelve un domicilio específico por ID utilizando query parameters.
      parameters:
      - description: ID del Domicilio
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Domicilio encontrado
          schema:
            $ref: '#/definitions/models.Domicilio'
        "404":
          description: Domicilio no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener domicilio por ID
      tags:
      - domicilios
  /incidencias:
    delete:
      consumes:
      - application/json
      description: Elimina una incidencia de la base de datos.
      parameters:
      - description: ID de la incidencia
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Incidencia eliminada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Incidencia no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Eliminar una incidencia
      tags:
      - incidencias
    get:
      consumes:
      - application/json
      description: Devuelve una lista de todas las incidencias registradas en la base
        de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de incidencias
          schema:
            items:
              $ref: '#/definitions/models.Incidencia'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todas las incidencias
      tags:
      - incidencias
    post:
      consumes:
      - application/json
      description: Crea una nueva incidencia en la base de datos.
      parameters:
      - description: Datos de la incidencia
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Incidencia'
      produces:
      - application/json
      responses:
        "201":
          description: Incidencia creada
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear una nueva incidencia
      tags:
      - incidencias
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una incidencia existente en la base de datos.
      parameters:
      - description: ID de la Incidencia
        in: query
        name: id
        required: true
        type: integer
      - description: Datos de la incidencia a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Incidencia'
      produces:
      - application/json
      responses:
        "200":
          description: Incidencia actualizada
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Incidencia no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar una incidencia
      tags:
      - incidencias
  /incidencias/search:
    get:
      consumes:
      - application/json
      description: Devuelve las incidencias de un trabajador en un mes y año específico.
      parameters:
      - description: Documento del Trabajador
        in: query
        name: documento
        required: true
        type: integer
      - description: Mes de la Incidencia (1-12)
        in: query
        name: mes
        required: true
        type: integer
      - description: Año de la Incidencia
        in: query
        name: anio
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de incidencias encontradas
          schema:
            items:
              $ref: '#/definitions/models.Incidencia'
            type: array
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: No se encontraron incidencias
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener incidencias por documento del trabajador y fecha
      tags:
      - incidencias
  /login:
    post:
      consumes:
      - application/json
      description: Permite iniciar sesión utilizando el documento y la contraseña,
        devuelve un JWT con el rol.
      parameters:
      - description: Documento y Contraseña
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Inicio de sesión exitoso con token JWT
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Solicitud incorrecta
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "401":
          description: Credenciales inválidas
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Iniciar sesión para clientes o trabajadores
      tags:
      - login
  /metodos_pago:
    delete:
      consumes:
      - application/json
      description: Elimina un método de pago de la base de datos.
      parameters:
      - description: ID del Método de Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Método de pago eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Método de pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Eliminar un método de pago
      tags:
      - metodos_pago
    get:
      consumes:
      - application/json
      description: Devuelve todos los métodos de pago registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de métodos de pago
          schema:
            items:
              $ref: '#/definitions/models.MetodoPago'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todos los métodos de pago
      tags:
      - metodos_pago
    post:
      consumes:
      - application/json
      description: Crea un nuevo método de pago en la base de datos.
      parameters:
      - description: Datos del método de pago a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.MetodoPago'
      produces:
      - application/json
      responses:
        "201":
          description: Método de pago creado
          schema:
            $ref: '#/definitions/models.MetodoPago'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear un nuevo método de pago
      tags:
      - metodos_pago
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un método de pago existente.
      parameters:
      - description: ID del Método de Pago
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del método de pago a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.MetodoPago'
      produces:
      - application/json
      responses:
        "200":
          description: Método de pago actualizado
          schema:
            $ref: '#/definitions/models.MetodoPago'
        "404":
          description: Método de pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar un método de pago
      tags:
      - metodos_pago
  /metodos_pago/search:
    get:
      consumes:
      - application/json
      description: Devuelve un método de pago específico por ID utilizando query parameters.
      parameters:
      - description: ID del Método de Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Método de pago encontrado
          schema:
            $ref: '#/definitions/models.MetodoPago'
        "404":
          description: Método de pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener método de pago por ID
      tags:
      - metodos_pago
  /nomina_trabajador:
    get:
      consumes:
      - application/json
      description: Obtiene un listado de todas las relaciones nómina-trabajador registradas
        en la base de datos
      produces:
      - application/json
      responses:
        "200":
          description: Listado de relaciones nómina-trabajador
          schema:
            items:
              $ref: '#/definitions/models.NominaTrabajador'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todas las relaciones nómina-trabajador
      tags:
      - nomina_trabajador
    post:
      consumes:
      - application/json
      description: Crea una nueva relación nómina-trabajador, calculando incidencias
        y total a pagar basado en el sueldo y las incidencias del trabajador.
      parameters:
      - description: Datos de la nómina-trabajador
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.NominaTrabajadorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Nómina-trabajador creada
          schema:
            $ref: '#/definitions/models.NominaTrabajadorResponse'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear una nómina-trabajador con cálculo automático
      tags:
      - nomina_trabajador
  /nomina_trabajador/mes:
    get:
      consumes:
      - application/json
      description: Obtiene todas las relaciones nómina-trabajador del mes actual o
        de un mes/año específico, incluyendo el nombre y apellido del trabajador.
      parameters:
      - description: Mes (1-12) para filtrar nóminas
        in: query
        name: mes
        type: integer
      - description: Año (YYYY) para filtrar nóminas
        in: query
        name: anio
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Relaciones nómina-trabajador encontradas
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "404":
          description: No se encontraron relaciones nómina-trabajador
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Consultar nóminas del mes actual o de un mes/año específico
      tags:
      - nomina_trabajador
  /nomina_trabajador/search:
    get:
      consumes:
      - application/json
      description: Obtiene las relaciones nómina-trabajador según los filtros aplicados
        (nómina actual, nóminas pagas, nóminas no pagas, nómina por mes y año, todas
        las nóminas).
      parameters:
      - description: Documento del trabajador
        in: query
        name: documento
        required: true
        type: integer
      - description: Consultar solo la nómina actual
        in: query
        name: actual
        type: boolean
      - description: Consultar solo nóminas pagadas
        in: query
        name: pagas
        type: boolean
      - description: Consultar solo nóminas no pagadas
        in: query
        name: no_pagas
        type: boolean
      - description: Mes (1-12) para filtrar nóminas
        in: query
        name: mes
        type: integer
      - description: Año (YYYY) para filtrar nóminas
        in: query
        name: anio
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Relaciones nómina-trabajador encontradas
          schema:
            items:
              $ref: '#/definitions/models.NominaTrabajador'
            type: array
        "404":
          description: Relación nómina-trabajador no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener relaciones nómina-trabajador según filtros
      tags:
      - nomina_trabajador
  /nominas:
    delete:
      consumes:
      - application/json
      description: Marca una nómina como "NO PAGO" en lugar de eliminarla físicamente.
      parameters:
      - description: ID de la Nómina
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Nómina eliminada lógicamente
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Nómina no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Eliminar una nómina (lógica)
      tags:
      - nominas
    get:
      consumes:
      - application/json
      description: Devuelve todas las nóminas registradas en la base de datos, con
        opción de filtrar por fecha exacta, mes y año.
      parameters:
      - description: Filtrar por fecha exacta (YYYY-MM-DD)
        in: query
        name: fecha
        type: string
      - description: Filtrar por mes (1-12)
        in: query
        name: mes
        type: integer
      - description: Filtrar por año (YYYY)
        in: query
        name: anio
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de nóminas
          schema:
            items:
              $ref: '#/definitions/models.Nomina'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todas las nóminas con filtros
      tags:
      - nominas
    post:
      consumes:
      - application/json
      description: Inserta un registro en la tabla "NOMINA" para activar el trigger
        y generar automáticamente los cálculos de nómina.
      parameters:
      - description: Datos de la nómina a crear (sin 'MONTO')
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Nomina'
      produces:
      - application/json
      responses:
        "201":
          description: Nómina creada
          schema:
            $ref: '#/definitions/models.Nomina'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear una nueva nómina
      tags:
      - nominas
    put:
      consumes:
      - application/json
      description: Cambia el estado de una nómina existente a "PAGO".
      parameters:
      - description: ID de la Nómina
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Nómina actualizada
          schema:
            $ref: '#/definitions/models.Nomina'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Nómina no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar el estado de una nómina
      tags:
      - nominas
  /pagos:
    delete:
      consumes:
      - application/json
      description: Elimina un pago de la base de datos.
      parameters:
      - description: ID del Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pago eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Eliminar un pago
      tags:
      - pagos
    get:
      consumes:
      - application/json
      description: Devuelve todos los pagos registrados en la base de datos, con opción
        de filtrar por fecha exacta, mes, año y estado.
      parameters:
      - description: Filtrar por fecha exacta (YYYY-MM-DD)
        in: query
        name: fecha
        type: string
      - description: Filtrar por dia (1-31)
        in: query
        name: dia
        type: integer
      - description: Filtrar por mes (1-12)
        in: query
        name: mes
        type: integer
      - description: Filtrar por año (YYYY)
        in: query
        name: anio
        type: integer
      - description: Filtrar por estado del pago (PAGADO, PENDIENTE, NO PAGO)
        in: query
        name: estado
        type: string
      - description: Filtrar por metodo de pago
        in: query
        name: metodo_pago
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de pagos
          schema:
            items:
              $ref: '#/definitions/models.Pago'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todos los pagos con filtros
      tags:
      - pagos
    post:
      consumes:
      - application/json
      description: Crea un nuevo pago en la base de datos.
      parameters:
      - description: Datos del pago a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Pago'
      produces:
      - application/json
      responses:
        "201":
          description: Pago creado
          schema:
            $ref: '#/definitions/models.Pago'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear un nuevo pago
      tags:
      - pagos
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un pago existente.
      parameters:
      - description: ID del Pago
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del pago a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Pago'
      produces:
      - application/json
      responses:
        "200":
          description: Pago actualizado
          schema:
            $ref: '#/definitions/models.Pago'
        "404":
          description: Pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar un pago
      tags:
      - pagos
  /pagos/search:
    get:
      consumes:
      - application/json
      description: Devuelve un pago específico por ID.
      parameters:
      - description: ID del Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pago encontrado
          schema:
            $ref: '#/definitions/models.Pago'
        "404":
          description: Pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener pago por ID
      tags:
      - pagos
  /pedido_clientes:
    get:
      consumes:
      - application/json
      description: Devuelve todas las relaciones entre pedidos y clientes.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de relaciones
          schema:
            items:
              $ref: '#/definitions/models.PedidoCliente'
            type: array
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todas las relaciones pedido-cliente
      tags:
      - pedido_clientes
    post:
      consumes:
      - application/json
      description: Crea una nueva relación entre un pedido y un cliente después de
        validar su existencia y evitar duplicados.
      parameters:
      - description: Datos de la relación a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PedidoCliente'
      produces:
      - application/json
      responses:
        "201":
          description: Relación creada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Datos inválidos o relación ya existente
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Cliente o pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear una nueva relación pedido-cliente
      tags:
      - pedido_clientes
  /pedidos:
    get:
      consumes:
      - application/json
      description: 'Devuelve pedidos filtrados según varios criterios: fecha, rango
        de fechas, usuario (cliente), tipo de método de pago, si tienen domicilio,
        etc.'
      parameters:
      - description: Fecha específica en formato YYYY-MM-DD
        in: query
        name: fecha
        type: string
      - description: Fecha inicial del rango en formato YYYY-MM-DD
        in: query
        name: desde
        type: string
      - description: Fecha final del rango en formato YYYY-MM-DD
        in: query
        name: hasta
        type: string
      - description: Mes del año (1-12)
        in: query
        name: mes
        type: integer
      - description: Año para el filtro de mes
        in: query
        name: anio
        type: integer
      - description: ID del cliente (PK_DOCUMENTO_CLIENTE)
        in: query
        name: cliente
        type: integer
      - description: Tipo de método de pago (NEQUI, DAVIPLATA, EFECTIVO)
        in: query
        name: metodo_pago
        type: string
      - description: Indica si el pedido tiene domicilio (true/false)
        in: query
        name: domicilio
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Pedidos obtenidos exitosamente
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Error en los parámetros de filtro
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error al obtener los pedidos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener pedidos con múltiples filtros
      tags:
      - pedido
    post:
      consumes:
      - application/json
      description: Crea un nuevo pedido en el sistema sin domicilio ni pago asociados.
      parameters:
      - description: Datos del pedido
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Pedido'
      produces:
      - application/json
      responses:
        "200":
          description: Pedido creado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Datos inválidos
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error al crear el pedido
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear un nuevo pedido
      tags:
      - pedido
  /pedidos/actualizar-estado:
    put:
      consumes:
      - application/json
      description: Actualiza el estado de un pedido existente.
      parameters:
      - description: ID del pedido
        in: query
        name: pedido_id
        required: true
        type: integer
      - description: Nuevo estado del pedido
        in: query
        name: estado
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Estado actualizado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error al actualizar estado del pedido
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar el estado de un pedido
      tags:
      - pedido
  /pedidos/asignar-domicilio:
    post:
      consumes:
      - application/json
      description: Asigna un domicilio existente a un pedido y actualiza su estado
        a "EN CAMINO".
      parameters:
      - description: ID del pedido
        in: query
        name: pedido_id
        required: true
        type: integer
      - description: ID del domicilio
        in: query
        name: domicilio_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Domicilio asignado al pedido
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Pedido o domicilio no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error al asignar domicilio
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Asignar un domicilio a un pedido
      tags:
      - pedido
  /pedidos/asignar-pago:
    post:
      consumes:
      - application/json
      description: Asigna un pago existente a un pedido y actualiza su estado a "PAGADO".
      parameters:
      - description: ID del pedido
        in: query
        name: pedido_id
        required: true
        type: integer
      - description: ID del pago
        in: query
        name: pago_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pago asignado al pedido
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Pedido o pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error al asignar pago
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Asignar un pago a un pedido
      tags:
      - pedido
  /pedidos/detalles:
    get:
      consumes:
      - application/json
      description: Devuelve la información del pedido, tipo de pago y los productos
        asociados.
      parameters:
      - description: ID del pedido (filtrar por pedido específico)
        in: query
        name: pedido_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Detalles del pedido obtenidos exitosamente
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Error en los parámetros de filtro
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error al obtener los detalles del pedido
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener detalles completos de un pedido
      tags:
      - pedido
  /producto_pedido:
    get:
      consumes:
      - application/json
      description: Devuelve los productos consolidados en un pedido específico
      parameters:
      - description: ID del pedido
        in: query
        name: pedido_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Lista de productos del pedido
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: No se encontraron productos asociados a este pedido
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener los productos de un pedido
      tags:
      - producto_pedido
    post:
      consumes:
      - application/json
      description: Crea un registro de productos consolidados en un pedido
      parameters:
      - description: Datos del pedido con productos
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ProductoPedido'
      produces:
      - application/json
      responses:
        "201":
          description: Pedido con productos agregado exitosamente
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Datos inválidos
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear un pedido con productos consolidados
      tags:
      - producto_pedido
    put:
      consumes:
      - application/json
      description: Permite agregar o modificar productos en un pedido consolidado
      parameters:
      - description: ID del pedido a actualizar
        in: query
        name: pedido_id
        required: true
        type: integer
      - description: Lista actualizada de productos
        in: body
        name: body
        required: true
        schema:
          items:
            additionalProperties: true
            type: object
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Productos actualizados exitosamente
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "400":
          description: Datos inválidos
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar productos en un pedido consolidado
      tags:
      - producto_pedido
  /productos:
    delete:
      consumes:
      - application/json
      description: Desactiva un producto en la base de datos (borrado lógico).
      parameters:
      - description: ID del Producto
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Producto desactivado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Producto no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Desactivar un producto
      tags:
      - productos
    get:
      consumes:
      - application/json
      description: Devuelve todos los productos registrados en la base de datos. Puedes
        incluir o excluir las imágenes con el parámetro `includeImage` y filtrar los
        productos activos con `onlyActive`.
      parameters:
      - description: Incluir imágenes Base64 en la respuesta (true o false, por defecto
          es false)
        in: query
        name: includeImage
        type: boolean
      - description: Filtrar solo productos disponibles (true o false, por defecto
          es false)
        in: query
        name: onlyActive
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Lista de productos
          schema:
            items:
              $ref: '#/definitions/models.Producto'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener productos
      tags:
      - productos
    post:
      consumes:
      - multipart/form-data
      description: Crea un nuevo producto en la base de datos, incluyendo una imagen
        en formato Base64.
      parameters:
      - description: Nombre del producto
        in: formData
        name: NOMBRE
        required: true
        type: string
      - description: Calorías del producto
        in: formData
        name: CALORIAS
        type: integer
      - description: Descripción del producto
        in: formData
        name: DESCRIPCION
        type: string
      - description: Estado del producto
        in: formData
        name: ESTADO_PRODUCTO
        required: true
        type: string
      - description: Precio del producto
        in: formData
        name: PRECIO
        required: true
        type: integer
      - description: Imagen del producto (opcional)
        in: formData
        name: IMAGEN
        type: file
      - description: Cantidad del producto
        in: formData
        name: CANTIDAD
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Producto creado
          schema:
            $ref: '#/definitions/models.Producto'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo producto
      tags:
      - productos
    put:
      consumes:
      - multipart/form-data
      description: Actualiza los datos de un producto existente, incluyendo una imagen
        en formato Base64.
      parameters:
      - description: ID del Producto
        in: query
        name: id
        required: true
        type: integer
      - description: Nombre del producto
        in: formData
        name: NOMBRE
        required: true
        type: string
      - description: Calorías del producto
        in: formData
        name: CALORIAS
        type: integer
      - description: Descripción del producto
        in: formData
        name: DESCRIPCION
        type: string
      - description: Estado del producto
        in: formData
        name: ESTADO_PRODUCTO
        required: true
        type: string
      - description: Precio del producto
        in: formData
        name: PRECIO
        required: true
        type: integer
      - description: Imagen del producto (opcional)
        in: formData
        name: IMAGEN
        type: file
      - description: Cantidad del producto
        in: formData
        name: CANTIDAD
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Producto actualizado
          schema:
            $ref: '#/definitions/models.Producto'
        "404":
          description: Producto no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un producto
      tags:
      - productos
  /productos/search:
    get:
      consumes:
      - application/json
      description: Devuelve un producto específico por ID, incluyendo la imagen en
        formato Base64.
      parameters:
      - description: ID del Producto
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Producto encontrado
          schema:
            $ref: '#/definitions/models.Producto'
        "404":
          description: Producto no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener producto por ID
      tags:
      - productos
  /reservas:
    delete:
      consumes:
      - application/json
      description: Actualiza el estado de una reserva a "CANCELADA".
      parameters:
      - description: ID de la Reserva
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Reserva cancelada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Reserva no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Cancelar una reserva
      tags:
      - reservas
    get:
      consumes:
      - application/json
      description: Devuelve todas las reservas registradas en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de reservas
          schema:
            items:
              $ref: '#/definitions/models.Reserva'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todas las reservas
      tags:
      - reservas
    post:
      consumes:
      - application/json
      description: Crea una nueva reserva en la base de datos.
      parameters:
      - description: Datos de la reserva a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Reserva'
      produces:
      - application/json
      responses:
        "201":
          description: Reserva creada
          schema:
            $ref: '#/definitions/models.Reserva'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear una nueva reserva
      tags:
      - reservas
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una reserva existente.
      parameters:
      - description: ID de la Reserva
        in: query
        name: id
        required: true
        type: integer
      - description: Datos de la reserva a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Reserva'
      produces:
      - application/json
      responses:
        "200":
          description: Reserva actualizada
          schema:
            $ref: '#/definitions/models.Reserva'
        "404":
          description: Reserva no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar una reserva
      tags:
      - reservas
  /reservas/search:
    get:
      consumes:
      - application/json
      description: Devuelve una reserva específica por ID utilizando query parameters.
      parameters:
      - description: ID de la Reserva
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Reserva encontrada
          schema:
            $ref: '#/definitions/models.Reserva'
        "404":
          description: Reserva no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener reserva por ID
      tags:
      - reservas
  /restaurantes:
    delete:
      consumes:
      - application/json
      description: Elimina un restaurante de la base de datos.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Restaurante eliminado
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un restaurante
      tags:
      - restaurantes
    get:
      consumes:
      - application/json
      description: Devuelve todos los restaurantes registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de restaurantes
          schema:
            items:
              $ref: '#/definitions/models.Restaurante'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los restaurantes
      tags:
      - restaurantes
    post:
      consumes:
      - application/json
      description: Crea un nuevo restaurante en la base de datos.
      parameters:
      - description: Datos del restaurante a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Restaurante'
      produces:
      - application/json
      responses:
        "201":
          description: Restaurante creado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo restaurante
      tags:
      - restaurantes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un restaurante existente.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del restaurante a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Restaurante'
      produces:
      - application/json
      responses:
        "200":
          description: Restaurante actualizado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un restaurante
      tags:
      - restaurantes
  /restaurantes/search:
    get:
      consumes:
      - application/json
      description: Devuelve un restaurante específico por ID utilizando query parameters.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restaurante encontrado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener restaurante por ID
      tags:
      - restaurantes
  /trabajadores:
    delete:
      consumes:
      - application/json
      description: Elimina un trabajador de la base de datos.
      parameters:
      - description: ID del Trabajador
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trabajador eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Trabajador no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Eliminar un trabajador
      tags:
      - trabajadores
    get:
      consumes:
      - application/json
      description: Devuelve todos los trabajadores registrados en la base de datos,
        con opción de filtrar por fecha de ingreso, rol, estado de retiro, o solo
        retirados.
      parameters:
      - description: Filtrar por fecha exacta de ingreso (YYYY-MM-DD)
        in: query
        name: fecha_ingreso
        type: string
      - description: Filtrar por rol del trabajador
        in: query
        name: rol
        type: string
      - description: Incluir trabajadores retirados (true/false)
        in: query
        name: incluir_retirados
        type: boolean
      - description: Ver solo trabajadores retirados (true/false)
        in: query
        name: solo_retirados
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: Lista de trabajadores
          schema:
            items:
              $ref: '#/definitions/models.Trabajador'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener todos los trabajadores con filtros
      tags:
      - trabajadores
    post:
      consumes:
      - application/json
      description: Crea un nuevo trabajador en la base de datos.
      parameters:
      - description: Datos del trabajador a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Trabajador'
      produces:
      - application/json
      responses:
        "201":
          description: Trabajador creado
          schema:
            $ref: '#/definitions/models.Trabajador'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Crear un nuevo trabajador
      tags:
      - trabajadores
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un trabajador existente.
      parameters:
      - description: ID del Trabajador
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del trabajador a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Trabajador'
      produces:
      - application/json
      responses:
        "200":
          description: Trabajador actualizado
          schema:
            $ref: '#/definitions/models.Trabajador'
        "404":
          description: Trabajador no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Actualizar un trabajador
      tags:
      - trabajadores
  /trabajadores/search:
    get:
      consumes:
      - application/json
      description: Devuelve un trabajador específico por ID utilizando query parameters.
      parameters:
      - description: ID del Trabajador
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trabajador encontrado
          schema:
            $ref: '#/definitions/models.Trabajador'
        "404":
          description: Trabajador no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      security:
      - BearerAuth: []
      summary: Obtener trabajador por ID
      tags:
      - trabajadores
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
