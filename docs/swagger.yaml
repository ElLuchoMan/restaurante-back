basePath: /restaurante/v1
definitions:
  models.ApiResponse:
    properties:
      cause:
        type: string
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  models.Cliente:
    properties:
      apellido:
        type: string
      direccion:
        type: string
      nombre:
        type: string
      observaciones:
        type: string
      password:
        type: string
      pk_DOCUMENTO_CLIENTE:
        type: integer
      telefono:
        type: string
    type: object
  models.Domicilio:
    properties:
      direccion:
        type: string
      entregado:
        type: boolean
      estado_PAGO:
        type: string
      fecha:
        type: string
      pk_ID_DOMICILIO:
        type: integer
      telefono:
        type: string
    type: object
  models.Ingrediente:
    properties:
      CALORIAS:
        type: integer
      FOTO:
        type: string
      NOMBRE:
        type: string
      PESO:
        type: integer
      PK_ID_INGREDIENTE:
        type: integer
      PK_ID_INVENTARIO:
        type: integer
      TIPO:
        type: string
    type: object
  models.Inventario:
    properties:
      CANTIDAD:
        type: integer
      FECHA:
        type: string
      PK_ID_INGREDIENTE:
        type: integer
      PK_ID_INVENTARIO:
        type: integer
      UNIDAD:
        type: integer
      UNIDAD_MINIMA:
        type: integer
    type: object
  models.ItemPedido:
    properties:
      CANTIDAD:
        type: integer
      PK_ID_ITEM_PEDIDO:
        type: integer
      PK_ID_PEDIDO:
        type: integer
    type: object
  models.MetodoPago:
    properties:
      DETALLE:
        type: string
      PK_ID_METODO_PAGO:
        type: integer
      PK_ID_PAGO:
        type: integer
      TIPO:
        type: string
    type: object
  models.Nomina:
    properties:
      ESTADO:
        type: string
      FECHA:
        type: string
      MONTO:
        type: integer
      PK_ID_NOMINA:
        type: integer
      PK_ID_RESTAURANTE:
        type: integer
    type: object
  models.Pago:
    properties:
      ESTADO:
        type: string
      FECHA:
        type: string
      HORA:
        type: string
      MONTO:
        type: integer
      PK_ID_METODO_PAGO:
        type: integer
      PK_ID_PAGO:
        type: integer
    type: object
  models.Pedido:
    properties:
      delivery:
        type: boolean
      estado:
        type: string
      fecha:
        type: string
      hora:
        type: string
      pk_ID_DOMICILIO:
        type: integer
      pk_ID_ITEM_PEDIDO:
        type: integer
      pk_ID_PAGO:
        type: integer
      pk_ID_PEDIDO:
        type: integer
      pk_ID_RESTAURANTE:
        type: integer
    type: object
  models.PedidoCliente:
    properties:
      PK_DOCUMENTO_CLIENTE:
        type: integer
      PK_ID_PEDIDO_CLIENTE:
        type: integer
      PK_ID_RESTAURANTE:
        type: integer
    type: object
  models.Plato:
    properties:
      CALORIAS:
        type: integer
      DESCRIPCION:
        type: string
      FOTO:
        description: Cambiado a string para Base64
        type: string
      NOMBRE:
        type: string
      PERSONALIZADO:
        type: boolean
      PK_ID_ITEM_PEDIDO:
        type: integer
      PK_ID_PLATO:
        type: integer
      PRECIO:
        type: integer
    type: object
  models.PlatoIngrediente:
    properties:
      CANTIDAD:
        type: integer
      PK_ID_INGREDIENTE:
        type: integer
      PK_ID_PLATO:
        type: integer
      PK_ID_PLATO_INGREDIENTE:
        type: integer
    type: object
  models.Reserva:
    properties:
      FECHA:
        type: string
      HORA:
        type: string
      PERSONAS:
        type: integer
      PK_ID_RESERVA:
        type: integer
      PK_ID_RESTAURANTE:
        type: integer
    type: object
  models.Restaurante:
    properties:
      dias_LABORALES:
        type: string
      hora_APERTURA:
        type: string
      nombre_RESTAURANTE:
        type: string
      pk_ID_RESTAURANTE:
        type: integer
    type: object
  models.Trabajador:
    properties:
      APELLIDO:
        type: string
      FECHA_INGRESO:
        type: string
      FECHA_NACIMIENTO:
        type: string
      FECHA_RETIRO:
        type: string
      NOMBRE:
        type: string
      NUEVO:
        type: boolean
      PASSWORD:
        type: string
      PK_DOCUMENTO_TRABAJADOR:
        type: integer
      PK_ID_RESTAURANTE:
        type: integer
      ROL:
        type: string
      SUELDO:
        type: integer
      TELEFONO:
        type: integer
    type: object
info:
  contact:
    email: baluisto96@gmail.com
  description: API para gestionar el sistema de un restaurante para "El fogón de María"
  title: Restaurante API
  version: 0.0.1
paths:
  /clientes:
    delete:
      consumes:
      - application/json
      description: Elimina un cliente de la base de datos.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Cliente eliminado
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un cliente
      tags:
      - clientes
    get:
      consumes:
      - application/json
      description: Devuelve todos los clientes registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de clientes
          schema:
            items:
              $ref: '#/definitions/models.Cliente'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los clientes
      tags:
      - clientes
    post:
      consumes:
      - application/json
      description: Crea un nuevo cliente en la base de datos.
      parameters:
      - description: Datos del cliente a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Cliente'
      produces:
      - application/json
      responses:
        "201":
          description: Cliente creado
          schema:
            $ref: '#/definitions/models.Cliente'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo cliente
      tags:
      - clientes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un cliente existente.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del cliente a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Cliente'
      produces:
      - application/json
      responses:
        "200":
          description: Cliente actualizado
          schema:
            $ref: '#/definitions/models.Cliente'
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un cliente
      tags:
      - clientes
  /clientes/search:
    get:
      consumes:
      - application/json
      description: Devuelve un cliente específico por ID utilizando query parameters.
      parameters:
      - description: ID del Cliente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Cliente encontrado
          schema:
            $ref: '#/definitions/models.Cliente'
        "404":
          description: Cliente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener cliente por ID
      tags:
      - clientes
  /domicilios:
    delete:
      consumes:
      - application/json
      description: Elimina un domicilio de la base de datos.
      parameters:
      - description: ID del Domicilio
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Domicilio eliminado
        "404":
          description: Domicilio no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un domicilio
      tags:
      - domicilios
    get:
      consumes:
      - application/json
      description: Devuelve todos los domicilios registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de domicilios
          schema:
            items:
              $ref: '#/definitions/models.Domicilio'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los domicilios
      tags:
      - domicilios
    post:
      consumes:
      - application/json
      description: Crea un nuevo domicilio en la base de datos.
      parameters:
      - description: Datos del domicilio a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Domicilio'
      produces:
      - application/json
      responses:
        "201":
          description: Domicilio creado
          schema:
            $ref: '#/definitions/models.Domicilio'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo domicilio
      tags:
      - domicilios
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un domicilio existente.
      parameters:
      - description: ID del Domicilio
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del domicilio a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Domicilio'
      produces:
      - application/json
      responses:
        "200":
          description: Domicilio actualizado
          schema:
            $ref: '#/definitions/models.Domicilio'
        "404":
          description: Domicilio no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un domicilio
      tags:
      - domicilios
  /domicilios/search:
    get:
      consumes:
      - application/json
      description: Devuelve un domicilio específico por ID utilizando query parameters.
      parameters:
      - description: ID del Domicilio
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Domicilio encontrado
          schema:
            $ref: '#/definitions/models.Domicilio'
        "404":
          description: Domicilio no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener domicilio por ID
      tags:
      - domicilios
  /ingredientes:
    delete:
      consumes:
      - application/json
      description: Elimina un ingrediente de la base de datos.
      parameters:
      - description: ID del Ingrediente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ingrediente eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Ingrediente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un ingrediente
      tags:
      - ingredientes
    get:
      consumes:
      - application/json
      description: Devuelve todos los ingredientes registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de ingredientes
          schema:
            items:
              $ref: '#/definitions/models.Ingrediente'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los ingredientes
      tags:
      - ingredientes
    post:
      consumes:
      - multipart/form-data
      description: Crea un nuevo ingrediente en la base de datos.
      parameters:
      - description: Nombre del ingrediente
        in: formData
        name: NOMBRE
        required: true
        type: string
      - description: Tipo del ingrediente
        in: formData
        name: TIPO
        required: true
        type: string
      - description: Peso del ingrediente
        in: formData
        name: PESO
        required: true
        type: integer
      - description: Calorías del ingrediente
        in: formData
        name: CALORIAS
        required: true
        type: integer
      - description: Imagen del ingrediente (opcional)
        in: formData
        name: FOTO
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Ingrediente creado
          schema:
            $ref: '#/definitions/models.Ingrediente'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo ingrediente
      tags:
      - ingredientes
    put:
      consumes:
      - multipart/form-data
      description: Actualiza los datos de un ingrediente existente.
      parameters:
      - description: ID del Ingrediente
        in: query
        name: id
        required: true
        type: integer
      - description: Nombre del ingrediente
        in: formData
        name: NOMBRE
        required: true
        type: string
      - description: Tipo del ingrediente
        in: formData
        name: TIPO
        required: true
        type: string
      - description: Peso del ingrediente
        in: formData
        name: PESO
        required: true
        type: integer
      - description: Calorías del ingrediente
        in: formData
        name: CALORIAS
        required: true
        type: integer
      - description: Imagen del ingrediente (opcional)
        in: formData
        name: FOTO
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Ingrediente actualizado
          schema:
            $ref: '#/definitions/models.Ingrediente'
        "404":
          description: Ingrediente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un ingrediente
      tags:
      - ingredientes
  /ingredientes/search:
    get:
      consumes:
      - application/json
      description: Devuelve un ingrediente específico por ID utilizando query parameters.
      parameters:
      - description: ID del Ingrediente
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ingrediente encontrado
          schema:
            $ref: '#/definitions/models.Ingrediente'
        "404":
          description: Ingrediente no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener ingrediente por ID
      tags:
      - ingredientes
  /inventarios:
    delete:
      consumes:
      - application/json
      description: Elimina un registro de inventario de la base de datos.
      parameters:
      - description: ID del Inventario
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Inventario eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Inventario no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un inventario
      tags:
      - inventarios
    get:
      consumes:
      - application/json
      description: Devuelve todos los registros de inventario.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de inventarios
          schema:
            items:
              $ref: '#/definitions/models.Inventario'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los inventarios
      tags:
      - inventarios
    post:
      consumes:
      - application/json
      description: Crea un nuevo registro de inventario.
      parameters:
      - description: Datos del inventario a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Inventario'
      produces:
      - application/json
      responses:
        "201":
          description: Inventario creado
          schema:
            $ref: '#/definitions/models.Inventario'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo inventario
      tags:
      - inventarios
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un inventario existente.
      parameters:
      - description: ID del Inventario
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del inventario a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Inventario'
      produces:
      - application/json
      responses:
        "200":
          description: Inventario actualizado
          schema:
            $ref: '#/definitions/models.Inventario'
        "404":
          description: Inventario no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un inventario
      tags:
      - inventarios
  /inventarios/search:
    get:
      consumes:
      - application/json
      description: Devuelve un registro de inventario específico por ID.
      parameters:
      - description: ID del Inventario
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Inventario encontrado
          schema:
            $ref: '#/definitions/models.Inventario'
        "404":
          description: Inventario no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener inventario por ID
      tags:
      - inventarios
  /item_pedidos:
    delete:
      consumes:
      - application/json
      description: Elimina un ítem de pedido de la base de datos.
      parameters:
      - description: ID del Ítem de Pedido
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ítem de pedido eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Ítem de pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un ítem de pedido
      tags:
      - item_pedidos
    get:
      consumes:
      - application/json
      description: Devuelve todos los ítems de pedido registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de ítems de pedido
          schema:
            items:
              $ref: '#/definitions/models.ItemPedido'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los ítems de pedido
      tags:
      - item_pedidos
    post:
      consumes:
      - application/json
      description: Crea un nuevo ítem de pedido en la base de datos.
      parameters:
      - description: Datos del ítem de pedido a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ItemPedido'
      produces:
      - application/json
      responses:
        "201":
          description: Ítem de pedido creado
          schema:
            $ref: '#/definitions/models.ItemPedido'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo ítem de pedido
      tags:
      - item_pedidos
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un ítem de pedido existente.
      parameters:
      - description: ID del Ítem de Pedido
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del ítem de pedido a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.ItemPedido'
      produces:
      - application/json
      responses:
        "200":
          description: Ítem de pedido actualizado
          schema:
            $ref: '#/definitions/models.ItemPedido'
        "404":
          description: Ítem de pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un ítem de pedido
      tags:
      - item_pedidos
  /item_pedidos/search:
    get:
      consumes:
      - application/json
      description: Devuelve un ítem de pedido específico por ID.
      parameters:
      - description: ID del Ítem de Pedido
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ítem de pedido encontrado
          schema:
            $ref: '#/definitions/models.ItemPedido'
        "404":
          description: Ítem de pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener ítem de pedido por ID
      tags:
      - item_pedidos
  /metodos_pago:
    delete:
      consumes:
      - application/json
      description: Elimina un método de pago de la base de datos.
      parameters:
      - description: ID del Método de Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Método de pago eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Método de pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un método de pago
      tags:
      - metodos_pago
    get:
      consumes:
      - application/json
      description: Devuelve todos los métodos de pago registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de métodos de pago
          schema:
            items:
              $ref: '#/definitions/models.MetodoPago'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los métodos de pago
      tags:
      - metodos_pago
    post:
      consumes:
      - application/json
      description: Crea un nuevo método de pago en la base de datos.
      parameters:
      - description: Datos del método de pago a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.MetodoPago'
      produces:
      - application/json
      responses:
        "201":
          description: Método de pago creado
          schema:
            $ref: '#/definitions/models.MetodoPago'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo método de pago
      tags:
      - metodos_pago
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un método de pago existente.
      parameters:
      - description: ID del Método de Pago
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del método de pago a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.MetodoPago'
      produces:
      - application/json
      responses:
        "200":
          description: Método de pago actualizado
          schema:
            $ref: '#/definitions/models.MetodoPago'
        "404":
          description: Método de pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un método de pago
      tags:
      - metodos_pago
  /metodos_pago/search:
    get:
      consumes:
      - application/json
      description: Devuelve un método de pago específico por ID utilizando query parameters.
      parameters:
      - description: ID del Método de Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Método de pago encontrado
          schema:
            $ref: '#/definitions/models.MetodoPago'
        "404":
          description: Método de pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener método de pago por ID
      tags:
      - metodos_pago
  /nominas:
    delete:
      consumes:
      - application/json
      description: Elimina una nómina de la base de datos.
      parameters:
      - description: ID de la Nómina
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Nómina eliminada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Nómina no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar una nómina
      tags:
      - nominas
    get:
      consumes:
      - application/json
      description: Devuelve todas las nóminas registradas en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de nóminas
          schema:
            items:
              $ref: '#/definitions/models.Nomina'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todas las nóminas
      tags:
      - nominas
    post:
      consumes:
      - application/json
      description: Crea una nueva nómina en la base de datos.
      parameters:
      - description: Datos de la nómina a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Nomina'
      produces:
      - application/json
      responses:
        "201":
          description: Nómina creada
          schema:
            $ref: '#/definitions/models.Nomina'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear una nueva nómina
      tags:
      - nominas
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una nómina existente.
      parameters:
      - description: ID de la Nómina
        in: query
        name: id
        required: true
        type: integer
      - description: Datos de la nómina a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Nomina'
      produces:
      - application/json
      responses:
        "200":
          description: Nómina actualizada
          schema:
            $ref: '#/definitions/models.Nomina'
        "404":
          description: Nómina no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar una nómina
      tags:
      - nominas
  /nominas/search:
    get:
      consumes:
      - application/json
      description: Devuelve una nómina específica por ID.
      parameters:
      - description: ID de la Nómina
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Nómina encontrada
          schema:
            $ref: '#/definitions/models.Nomina'
        "404":
          description: Nómina no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener nómina por ID
      tags:
      - nominas
  /pagos:
    delete:
      consumes:
      - application/json
      description: Elimina un pago de la base de datos.
      parameters:
      - description: ID del Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pago eliminado
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un pago
      tags:
      - pagos
    get:
      consumes:
      - application/json
      description: Devuelve todos los pagos registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de pagos
          schema:
            items:
              $ref: '#/definitions/models.Pago'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los pagos
      tags:
      - pagos
    post:
      consumes:
      - application/json
      description: Crea un nuevo pago en la base de datos.
      parameters:
      - description: Datos del pago a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Pago'
      produces:
      - application/json
      responses:
        "201":
          description: Pago creado
          schema:
            $ref: '#/definitions/models.Pago'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo pago
      tags:
      - pagos
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un pago existente.
      parameters:
      - description: ID del Pago
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del pago a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Pago'
      produces:
      - application/json
      responses:
        "200":
          description: Pago actualizado
          schema:
            $ref: '#/definitions/models.Pago'
        "404":
          description: Pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un pago
      tags:
      - pagos
  /pagos/search:
    get:
      consumes:
      - application/json
      description: Devuelve un pago específico por ID utilizando query parameters.
      parameters:
      - description: ID del Pago
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pago encontrado
          schema:
            $ref: '#/definitions/models.Pago'
        "404":
          description: Pago no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener pago por ID
      tags:
      - pagos
  /pedido_clientes:
    delete:
      consumes:
      - application/json
      description: Elimina una relación de la base de datos.
      parameters:
      - description: ID de la Relación
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Relación eliminada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Relación no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar una relación pedido-cliente
      tags:
      - pedido_clientes
    get:
      consumes:
      - application/json
      description: Devuelve todas las relaciones entre pedidos y clientes.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de relaciones
          schema:
            items:
              $ref: '#/definitions/models.PedidoCliente'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todas las relaciones pedido-cliente
      tags:
      - pedido_clientes
    post:
      consumes:
      - application/json
      description: Crea una nueva relación entre un pedido y un cliente.
      parameters:
      - description: Datos de la relación a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PedidoCliente'
      produces:
      - application/json
      responses:
        "201":
          description: Relación creada
          schema:
            $ref: '#/definitions/models.PedidoCliente'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear una nueva relación pedido-cliente
      tags:
      - pedido_clientes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una relación existente.
      parameters:
      - description: ID de la Relación
        in: query
        name: id
        required: true
        type: integer
      - description: Datos de la relación a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PedidoCliente'
      produces:
      - application/json
      responses:
        "200":
          description: Relación actualizada
          schema:
            $ref: '#/definitions/models.PedidoCliente'
        "404":
          description: Relación no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar una relación pedido-cliente
      tags:
      - pedido_clientes
  /pedido_clientes/search:
    get:
      consumes:
      - application/json
      description: Devuelve una relación específica por ID.
      parameters:
      - description: ID de la Relación
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Relación encontrada
          schema:
            $ref: '#/definitions/models.PedidoCliente'
        "404":
          description: Relación no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener relación por ID
      tags:
      - pedido_clientes
  /pedidos:
    delete:
      consumes:
      - application/json
      description: Elimina un pedido de la base de datos.
      parameters:
      - description: ID del Pedido
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Pedido eliminado
        "404":
          description: Pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un pedido
      tags:
      - pedidos
    get:
      consumes:
      - application/json
      description: Devuelve todos los pedidos registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de pedidos
          schema:
            items:
              $ref: '#/definitions/models.Pedido'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los pedidos
      tags:
      - pedidos
    post:
      consumes:
      - application/json
      description: Crea un nuevo pedido en la base de datos.
      parameters:
      - description: Datos del pedido a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Pedido'
      produces:
      - application/json
      responses:
        "201":
          description: Pedido creado
          schema:
            $ref: '#/definitions/models.Pedido'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo pedido
      tags:
      - pedidos
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un pedido existente.
      parameters:
      - description: ID del Pedido
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del pedido a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Pedido'
      produces:
      - application/json
      responses:
        "200":
          description: Pedido actualizado
          schema:
            $ref: '#/definitions/models.Pedido'
        "404":
          description: Pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un pedido
      tags:
      - pedidos
  /pedidos/search:
    get:
      consumes:
      - application/json
      description: Devuelve un pedido específico por ID utilizando query parameters.
      parameters:
      - description: ID del Pedido
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pedido encontrado
          schema:
            $ref: '#/definitions/models.Pedido'
        "404":
          description: Pedido no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener pedido por ID
      tags:
      - pedidos
  /plato_ingredientes:
    delete:
      consumes:
      - application/json
      description: Elimina una relación de la base de datos.
      parameters:
      - description: ID de la Relación
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Relación eliminada
          schema:
            $ref: '#/definitions/models.ApiResponse'
        "404":
          description: Relación no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar una relación plato-ingrediente
      tags:
      - plato_ingredientes
    get:
      consumes:
      - application/json
      description: Devuelve todas las relaciones entre platos e ingredientes.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de relaciones
          schema:
            items:
              $ref: '#/definitions/models.PlatoIngrediente'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todas las relaciones plato-ingrediente
      tags:
      - plato_ingredientes
    post:
      consumes:
      - application/json
      description: Crea una nueva relación entre un plato y un ingrediente.
      parameters:
      - description: Datos de la relación a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PlatoIngrediente'
      produces:
      - application/json
      responses:
        "201":
          description: Relación creada
          schema:
            $ref: '#/definitions/models.PlatoIngrediente'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear una nueva relación plato-ingrediente
      tags:
      - plato_ingredientes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una relación existente.
      parameters:
      - description: ID de la Relación
        in: query
        name: id
        required: true
        type: integer
      - description: Datos de la relación a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.PlatoIngrediente'
      produces:
      - application/json
      responses:
        "200":
          description: Relación actualizada
          schema:
            $ref: '#/definitions/models.PlatoIngrediente'
        "404":
          description: Relación no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar una relación plato-ingrediente
      tags:
      - plato_ingredientes
  /plato_ingredientes/search:
    get:
      consumes:
      - application/json
      description: Devuelve una relación específica por ID.
      parameters:
      - description: ID de la Relación
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Relación encontrada
          schema:
            $ref: '#/definitions/models.PlatoIngrediente'
        "404":
          description: Relación no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener relación por ID
      tags:
      - plato_ingredientes
  /platos:
    delete:
      consumes:
      - application/json
      description: Elimina un plato de la base de datos.
      parameters:
      - description: ID del Plato
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Plato eliminado
        "404":
          description: Plato no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un plato
      tags:
      - platos
    get:
      consumes:
      - application/json
      description: Devuelve todos los platos registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de platos
          schema:
            items:
              $ref: '#/definitions/models.Plato'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los platos
      tags:
      - platos
    post:
      consumes:
      - multipart/form-data
      description: Crea un nuevo plato en la base de datos, incluyendo una imagen
        en formato Base64.
      parameters:
      - description: Nombre del plato
        in: formData
        name: NOMBRE
        required: true
        type: string
      - description: Calorías del plato
        in: formData
        name: CALORIAS
        required: true
        type: integer
      - description: Descripción del plato
        in: formData
        name: DESCRIPCION
        type: string
      - description: Precio del plato
        in: formData
        name: PRECIO
        required: true
        type: integer
      - description: Indica si el plato es personalizado
        in: formData
        name: PERSONALIZADO
        required: true
        type: boolean
      - description: Imagen del plato (opcional)
        in: formData
        name: FOTO
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Plato creado
          schema:
            $ref: '#/definitions/models.Plato'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo plato
      tags:
      - platos
    put:
      consumes:
      - multipart/form-data
      description: Actualiza los datos de un plato existente, incluyendo una imagen
        en formato Base64.
      parameters:
      - description: ID del Plato
        in: query
        name: id
        required: true
        type: integer
      - description: Nombre del plato
        in: formData
        name: NOMBRE
        required: true
        type: string
      - description: Calorías del plato
        in: formData
        name: CALORIAS
        required: true
        type: integer
      - description: Descripción del plato
        in: formData
        name: DESCRIPCION
        type: string
      - description: Precio del plato
        in: formData
        name: PRECIO
        required: true
        type: integer
      - description: Indica si el plato es personalizado
        in: formData
        name: PERSONALIZADO
        required: true
        type: boolean
      - description: Imagen del plato (opcional)
        in: formData
        name: FOTO
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Plato actualizado
          schema:
            $ref: '#/definitions/models.Plato'
        "404":
          description: Plato no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un plato
      tags:
      - platos
  /platos/search:
    get:
      consumes:
      - application/json
      description: Devuelve un plato específico por ID utilizando query parameters.
      parameters:
      - description: ID del Plato
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Plato encontrado
          schema:
            $ref: '#/definitions/models.Plato'
        "404":
          description: Plato no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener plato por ID
      tags:
      - platos
  /reservas:
    delete:
      consumes:
      - application/json
      description: Elimina una reserva de la base de datos.
      parameters:
      - description: ID de la Reserva
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Reserva eliminada
        "404":
          description: Reserva no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar una reserva
      tags:
      - reservas
    get:
      consumes:
      - application/json
      description: Devuelve todas las reservas registradas en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de reservas
          schema:
            items:
              $ref: '#/definitions/models.Reserva'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todas las reservas
      tags:
      - reservas
    post:
      consumes:
      - application/json
      description: Crea una nueva reserva en la base de datos.
      parameters:
      - description: Datos de la reserva a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Reserva'
      produces:
      - application/json
      responses:
        "201":
          description: Reserva creada
          schema:
            $ref: '#/definitions/models.Reserva'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear una nueva reserva
      tags:
      - reservas
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una reserva existente.
      parameters:
      - description: ID de la Reserva
        in: query
        name: id
        required: true
        type: integer
      - description: Datos de la reserva a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Reserva'
      produces:
      - application/json
      responses:
        "200":
          description: Reserva actualizada
          schema:
            $ref: '#/definitions/models.Reserva'
        "404":
          description: Reserva no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar una reserva
      tags:
      - reservas
  /reservas/search:
    get:
      consumes:
      - application/json
      description: Devuelve una reserva específica por ID utilizando query parameters.
      parameters:
      - description: ID de la Reserva
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Reserva encontrada
          schema:
            $ref: '#/definitions/models.Reserva'
        "404":
          description: Reserva no encontrada
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener reserva por ID
      tags:
      - reservas
  /restaurantes:
    delete:
      consumes:
      - application/json
      description: Elimina un restaurante de la base de datos.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Restaurante eliminado
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un restaurante
      tags:
      - restaurantes
    get:
      consumes:
      - application/json
      description: Devuelve todos los restaurantes registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de restaurantes
          schema:
            items:
              $ref: '#/definitions/models.Restaurante'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los restaurantes
      tags:
      - restaurantes
    post:
      consumes:
      - application/json
      description: Crea un nuevo restaurante en la base de datos.
      parameters:
      - description: Datos del restaurante a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Restaurante'
      produces:
      - application/json
      responses:
        "201":
          description: Restaurante creado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo restaurante
      tags:
      - restaurantes
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un restaurante existente.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del restaurante a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Restaurante'
      produces:
      - application/json
      responses:
        "200":
          description: Restaurante actualizado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un restaurante
      tags:
      - restaurantes
  /restaurantes/search:
    get:
      consumes:
      - application/json
      description: Devuelve un restaurante específico por ID utilizando query parameters.
      parameters:
      - description: ID del Restaurante
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Restaurante encontrado
          schema:
            $ref: '#/definitions/models.Restaurante'
        "404":
          description: Restaurante no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener restaurante por ID
      tags:
      - restaurantes
  /trabajadores:
    delete:
      consumes:
      - application/json
      description: Elimina un trabajador de la base de datos.
      parameters:
      - description: ID del Trabajador
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Trabajador eliminado
        "404":
          description: Trabajador no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Eliminar un trabajador
      tags:
      - trabajadores
    get:
      consumes:
      - application/json
      description: Devuelve todos los trabajadores registrados en la base de datos.
      produces:
      - application/json
      responses:
        "200":
          description: Lista de trabajadores
          schema:
            items:
              $ref: '#/definitions/models.Trabajador'
            type: array
        "500":
          description: Error en la base de datos
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener todos los trabajadores
      tags:
      - trabajadores
    post:
      consumes:
      - application/json
      description: Crea un nuevo trabajador en la base de datos.
      parameters:
      - description: Datos del trabajador a crear
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Trabajador'
      produces:
      - application/json
      responses:
        "201":
          description: Trabajador creado
          schema:
            $ref: '#/definitions/models.Trabajador'
        "400":
          description: Error en la solicitud
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Crear un nuevo trabajador
      tags:
      - trabajadores
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un trabajador existente.
      parameters:
      - description: ID del Trabajador
        in: query
        name: id
        required: true
        type: integer
      - description: Datos del trabajador a actualizar
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Trabajador'
      produces:
      - application/json
      responses:
        "200":
          description: Trabajador actualizado
          schema:
            $ref: '#/definitions/models.Trabajador'
        "404":
          description: Trabajador no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Actualizar un trabajador
      tags:
      - trabajadores
  /trabajadores/search:
    get:
      consumes:
      - application/json
      description: Devuelve un trabajador específico por ID utilizando query parameters.
      parameters:
      - description: ID del Trabajador
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Trabajador encontrado
          schema:
            $ref: '#/definitions/models.Trabajador'
        "404":
          description: Trabajador no encontrado
          schema:
            $ref: '#/definitions/models.ApiResponse'
      summary: Obtener trabajador por ID
      tags:
      - trabajadores
swagger: "2.0"
