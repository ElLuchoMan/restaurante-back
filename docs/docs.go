// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "baluisto96@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/clientes": {
            "get": {
                "description": "Devuelve todos los clientes registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Obtener todos los clientes",
                "responses": {
                    "200": {
                        "description": "Lista de clientes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Cliente"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un cliente existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Actualizar un cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Cliente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del cliente a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    },
                    "404": {
                        "description": "Cliente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo cliente en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Crear un nuevo cliente",
                "parameters": [
                    {
                        "description": "Datos del cliente a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Cliente creado",
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un cliente de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Eliminar un cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Cliente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Cliente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/clientes/search": {
            "get": {
                "description": "Devuelve un cliente espec√≠fico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Obtener cliente por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Cliente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    },
                    "404": {
                        "description": "Cliente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/domicilios": {
            "get": {
                "description": "Devuelve todos los domicilios registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Obtener todos los domicilios",
                "responses": {
                    "200": {
                        "description": "Lista de domicilios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Domicilio"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un domicilio existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Actualizar un domicilio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Domicilio",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del domicilio a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domicilio actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    },
                    "404": {
                        "description": "Domicilio no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo domicilio en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Crear un nuevo domicilio",
                "parameters": [
                    {
                        "description": "Datos del domicilio a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Domicilio creado",
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un domicilio de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Eliminar un domicilio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Domicilio",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Domicilio eliminado"
                    },
                    "404": {
                        "description": "Domicilio no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/domicilios/search": {
            "get": {
                "description": "Devuelve un domicilio espec√≠fico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Obtener domicilio por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Domicilio",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domicilio encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    },
                    "404": {
                        "description": "Domicilio no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/ingredientes": {
            "get": {
                "description": "Devuelve todos los ingredientes registrados en la base de datos, independientemente de su estado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredientes"
                ],
                "summary": "Obtener todos los ingredientes",
                "responses": {
                    "200": {
                        "description": "Lista de todos los ingredientes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ingrediente"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un ingrediente existente, incluyendo una imagen en formato Base64.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredientes"
                ],
                "summary": "Actualizar un ingrediente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Ingrediente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nombre del ingrediente",
                        "name": "NOMBRE",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tipo del ingrediente",
                        "name": "TIPO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Peso del ingrediente",
                        "name": "PESO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Calor√≠as del ingrediente",
                        "name": "CALORIAS",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del ingrediente (opcional)",
                        "name": "FOTO",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingrediente actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Ingrediente"
                        }
                    },
                    "404": {
                        "description": "Ingrediente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo ingrediente en la base de datos, incluyendo una imagen en formato Base64.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredientes"
                ],
                "summary": "Crear un nuevo ingrediente",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre del ingrediente",
                        "name": "NOMBRE",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tipo del ingrediente",
                        "name": "TIPO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Peso del ingrediente",
                        "name": "PESO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Calor√≠as del ingrediente",
                        "name": "CALORIAS",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del ingrediente (opcional)",
                        "name": "FOTO",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Ingrediente creado",
                        "schema": {
                            "$ref": "#/definitions/models.Ingrediente"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Marca un ingrediente como inactivo (borrado l√≥gico).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredientes"
                ],
                "summary": "Desactivar un ingrediente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Ingrediente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingrediente desactivado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Ingrediente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/ingredientes/active": {
            "get": {
                "description": "Devuelve solo los ingredientes que est√°n activos (ACTIVO = TRUE).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredientes"
                ],
                "summary": "Obtener todos los ingredientes activos",
                "responses": {
                    "200": {
                        "description": "Lista de ingredientes activos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ingrediente"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/ingredientes/search": {
            "get": {
                "description": "Devuelve un ingrediente espec√≠fico por ID, incluyendo la imagen en formato Base64.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredientes"
                ],
                "summary": "Obtener ingrediente por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Ingrediente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingrediente encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Ingrediente"
                        }
                    },
                    "404": {
                        "description": "Ingrediente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/inventarios": {
            "get": {
                "description": "Devuelve todos los registros de inventario.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventarios"
                ],
                "summary": "Obtener todos los inventarios",
                "responses": {
                    "200": {
                        "description": "Lista de inventarios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Inventario"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un inventario existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventarios"
                ],
                "summary": "Actualizar un inventario",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Inventario",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del inventario a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inventario"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventario actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Inventario"
                        }
                    },
                    "404": {
                        "description": "Inventario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo registro de inventario.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventarios"
                ],
                "summary": "Crear un nuevo inventario",
                "parameters": [
                    {
                        "description": "Datos del inventario a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inventario"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Inventario creado",
                        "schema": {
                            "$ref": "#/definitions/models.Inventario"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un registro de inventario de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventarios"
                ],
                "summary": "Eliminar un inventario",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Inventario",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventario eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Inventario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/inventarios/search": {
            "get": {
                "description": "Devuelve un registro de inventario espec√≠fico por ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "inventarios"
                ],
                "summary": "Obtener inventario por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Inventario",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inventario encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Inventario"
                        }
                    },
                    "404": {
                        "description": "Inventario no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/item_pedidos": {
            "get": {
                "description": "Devuelve todos los √≠tems de pedido registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item_pedidos"
                ],
                "summary": "Obtener todos los √≠tems de pedido",
                "responses": {
                    "200": {
                        "description": "Lista de √≠tems de pedido",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ItemPedido"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un √≠tem de pedido existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item_pedidos"
                ],
                "summary": "Actualizar un √≠tem de pedido",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del √çtem de Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del √≠tem de pedido a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ItemPedido"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "√çtem de pedido actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.ItemPedido"
                        }
                    },
                    "404": {
                        "description": "√çtem de pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo √≠tem de pedido en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item_pedidos"
                ],
                "summary": "Crear un nuevo √≠tem de pedido",
                "parameters": [
                    {
                        "description": "Datos del √≠tem de pedido a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ItemPedido"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "√çtem de pedido creado",
                        "schema": {
                            "$ref": "#/definitions/models.ItemPedido"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un √≠tem de pedido de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item_pedidos"
                ],
                "summary": "Eliminar un √≠tem de pedido",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del √çtem de Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "√çtem de pedido eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "√çtem de pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/item_pedidos/search": {
            "get": {
                "description": "Devuelve un √≠tem de pedido espec√≠fico por ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "item_pedidos"
                ],
                "summary": "Obtener √≠tem de pedido por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del √çtem de Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "√çtem de pedido encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ItemPedido"
                        }
                    },
                    "404": {
                        "description": "√çtem de pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/metodos_pago": {
            "get": {
                "description": "Devuelve todos los m√©todos de pago registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Obtener todos los m√©todos de pago",
                "responses": {
                    "200": {
                        "description": "Lista de m√©todos de pago",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MetodoPago"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un m√©todo de pago existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Actualizar un m√©todo de pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del M√©todo de Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del m√©todo de pago a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "M√©todo de pago actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    },
                    "404": {
                        "description": "M√©todo de pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo m√©todo de pago en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Crear un nuevo m√©todo de pago",
                "parameters": [
                    {
                        "description": "Datos del m√©todo de pago a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "M√©todo de pago creado",
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un m√©todo de pago de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Eliminar un m√©todo de pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del M√©todo de Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "M√©todo de pago eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "M√©todo de pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/metodos_pago/search": {
            "get": {
                "description": "Devuelve un m√©todo de pago espec√≠fico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Obtener m√©todo de pago por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del M√©todo de Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "M√©todo de pago encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    },
                    "404": {
                        "description": "M√©todo de pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/nominas": {
            "get": {
                "description": "Devuelve todas las n√≥minas registradas en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Obtener todas las n√≥minas",
                "responses": {
                    "200": {
                        "description": "Lista de n√≥minas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Nomina"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de una n√≥mina existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Actualizar una n√≥mina",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la N√≥mina",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos de la n√≥mina a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "N√≥mina actualizada",
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    },
                    "404": {
                        "description": "N√≥mina no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea una nueva n√≥mina en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Crear una nueva n√≥mina",
                "parameters": [
                    {
                        "description": "Datos de la n√≥mina a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "N√≥mina creada",
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina una n√≥mina de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Eliminar una n√≥mina",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la N√≥mina",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "N√≥mina eliminada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "N√≥mina no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/nominas/search": {
            "get": {
                "description": "Devuelve una n√≥mina espec√≠fica por ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Obtener n√≥mina por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la N√≥mina",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "N√≥mina encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    },
                    "404": {
                        "description": "N√≥mina no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pagos": {
            "get": {
                "description": "Devuelve todos los pagos registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Obtener todos los pagos",
                "responses": {
                    "200": {
                        "description": "Lista de pagos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pago"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un pago existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Actualizar un pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del pago a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pago actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "404": {
                        "description": "Pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo pago en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Crear un nuevo pago",
                "parameters": [
                    {
                        "description": "Datos del pago a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Pago creado",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un pago de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Eliminar un pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pago eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pagos/search": {
            "get": {
                "description": "Devuelve un pago espec√≠fico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Obtener pago por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pago encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "404": {
                        "description": "Pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedido_clientes": {
            "get": {
                "description": "Devuelve todas las relaciones entre pedidos y clientes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Obtener todas las relaciones pedido-cliente",
                "responses": {
                    "200": {
                        "description": "Lista de relaciones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PedidoCliente"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de una relaci√≥n existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Actualizar una relaci√≥n pedido-cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relaci√≥n",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos de la relaci√≥n a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relaci√≥n actualizada",
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    },
                    "404": {
                        "description": "Relaci√≥n no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea una nueva relaci√≥n entre un pedido y un cliente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Crear una nueva relaci√≥n pedido-cliente",
                "parameters": [
                    {
                        "description": "Datos de la relaci√≥n a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Relaci√≥n creada",
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina una relaci√≥n de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Eliminar una relaci√≥n pedido-cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relaci√≥n",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relaci√≥n eliminada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Relaci√≥n no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedido_clientes/search": {
            "get": {
                "description": "Devuelve una relaci√≥n espec√≠fica por ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Obtener relaci√≥n por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relaci√≥n",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relaci√≥n encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    },
                    "404": {
                        "description": "Relaci√≥n no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedidos": {
            "get": {
                "description": "Devuelve todos los pedidos registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Obtener todos los pedidos",
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pedido"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un pedido existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Actualizar un pedido",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del pedido a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pedido actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    },
                    "404": {
                        "description": "Pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo pedido en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Crear un nuevo pedido",
                "parameters": [
                    {
                        "description": "Datos del pedido a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Pedido creado",
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un pedido de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Eliminar un pedido",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pedido eliminado"
                    },
                    "404": {
                        "description": "Pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedidos/search": {
            "get": {
                "description": "Devuelve un pedido espec√≠fico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Obtener pedido por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pedido encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    },
                    "404": {
                        "description": "Pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/plato_ingredientes": {
            "get": {
                "description": "Devuelve todas las relaciones entre platos e ingredientes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plato_ingredientes"
                ],
                "summary": "Obtener todas las relaciones plato-ingrediente",
                "responses": {
                    "200": {
                        "description": "Lista de relaciones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PlatoIngrediente"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de una relaci√≥n existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plato_ingredientes"
                ],
                "summary": "Actualizar una relaci√≥n plato-ingrediente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relaci√≥n",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos de la relaci√≥n a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PlatoIngrediente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relaci√≥n actualizada",
                        "schema": {
                            "$ref": "#/definitions/models.PlatoIngrediente"
                        }
                    },
                    "404": {
                        "description": "Relaci√≥n no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea una nueva relaci√≥n entre un plato y un ingrediente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plato_ingredientes"
                ],
                "summary": "Crear una nueva relaci√≥n plato-ingrediente",
                "parameters": [
                    {
                        "description": "Datos de la relaci√≥n a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PlatoIngrediente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Relaci√≥n creada",
                        "schema": {
                            "$ref": "#/definitions/models.PlatoIngrediente"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina una relaci√≥n de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plato_ingredientes"
                ],
                "summary": "Eliminar una relaci√≥n plato-ingrediente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relaci√≥n",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relaci√≥n eliminada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Relaci√≥n no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/plato_ingredientes/search": {
            "get": {
                "description": "Devuelve una relaci√≥n espec√≠fica por ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "plato_ingredientes"
                ],
                "summary": "Obtener relaci√≥n por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relaci√≥n",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relaci√≥n encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.PlatoIngrediente"
                        }
                    },
                    "404": {
                        "description": "Relaci√≥n no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/platos": {
            "get": {
                "description": "Devuelve todos los platos registrados en la base de datos sin la imagen (FOTO).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platos"
                ],
                "summary": "Obtener todos los platos",
                "responses": {
                    "200": {
                        "description": "Lista de todos los platos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Plato"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un plato existente, incluyendo una imagen en formato Base64.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platos"
                ],
                "summary": "Actualizar un plato",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Plato",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nombre del plato",
                        "name": "NOMBRE",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Calor√≠as del plato",
                        "name": "CALORIAS",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Descripci√≥n del plato",
                        "name": "DESCRIPCION",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Precio del plato",
                        "name": "PRECIO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Indica si el plato es personalizado",
                        "name": "PERSONALIZADO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del plato (opcional)",
                        "name": "FOTO",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plato actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Plato"
                        }
                    },
                    "404": {
                        "description": "Plato no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo plato en la base de datos, incluyendo una imagen en formato Base64.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platos"
                ],
                "summary": "Crear un nuevo plato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre del plato",
                        "name": "NOMBRE",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Calor√≠as del plato",
                        "name": "CALORIAS",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Descripci√≥n del plato",
                        "name": "DESCRIPCION",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Precio del plato",
                        "name": "PRECIO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Indica si el plato es personalizado",
                        "name": "PERSONALIZADO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del plato (opcional)",
                        "name": "FOTO",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Plato creado",
                        "schema": {
                            "$ref": "#/definitions/models.Plato"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Desactiva un plato en la base de datos (borrado l√≥gico).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platos"
                ],
                "summary": "Desactivar un plato",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Plato",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Plato desactivado"
                    },
                    "404": {
                        "description": "Plato no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/platos/active": {
            "get": {
                "description": "Devuelve solo los platos que est√°n activos (ACTIVO = TRUE).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platos"
                ],
                "summary": "Obtener todos los platos activos",
                "responses": {
                    "200": {
                        "description": "Lista de platos activos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Plato"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/platos/search": {
            "get": {
                "description": "Devuelve un plato espec√≠fico por ID, incluyendo la imagen en formato Base64.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "platos"
                ],
                "summary": "Obtener plato por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Plato",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plato encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Plato"
                        }
                    },
                    "404": {
                        "description": "Plato no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/reservas": {
            "get": {
                "description": "Devuelve todas las reservas registradas en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Obtener todas las reservas",
                "responses": {
                    "200": {
                        "description": "Lista de reservas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reserva"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de una reserva existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Actualizar una reserva",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Reserva",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos de la reserva a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reserva actualizada",
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    },
                    "404": {
                        "description": "Reserva no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea una nueva reserva en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Crear una nueva reserva",
                "parameters": [
                    {
                        "description": "Datos de la reserva a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reserva creada",
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina una reserva de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Eliminar una reserva",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Reserva",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Reserva eliminada"
                    },
                    "404": {
                        "description": "Reserva no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/reservas/search": {
            "get": {
                "description": "Devuelve una reserva espec√≠fica por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Obtener reserva por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Reserva",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reserva encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    },
                    "404": {
                        "description": "Reserva no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/restaurantes": {
            "get": {
                "description": "Devuelve todos los restaurantes registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Obtener todos los restaurantes",
                "responses": {
                    "200": {
                        "description": "Lista de restaurantes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Restaurante"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un restaurante existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Actualizar un restaurante",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Restaurante",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del restaurante a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurante actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    },
                    "404": {
                        "description": "Restaurante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo restaurante en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Crear un nuevo restaurante",
                "parameters": [
                    {
                        "description": "Datos del restaurante a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Restaurante creado",
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un restaurante de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Eliminar un restaurante",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Restaurante",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Restaurante eliminado"
                    },
                    "404": {
                        "description": "Restaurante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/restaurantes/search": {
            "get": {
                "description": "Devuelve un restaurante espec√≠fico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Obtener restaurante por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Restaurante",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurante encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    },
                    "404": {
                        "description": "Restaurante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/trabajadores": {
            "get": {
                "description": "Devuelve todos los trabajadores registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Obtener todos los trabajadores",
                "responses": {
                    "200": {
                        "description": "Lista de trabajadores",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Trabajador"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un trabajador existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Actualizar un trabajador",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Trabajador",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del trabajador a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trabajador actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    },
                    "404": {
                        "description": "Trabajador no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo trabajador en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Crear un nuevo trabajador",
                "parameters": [
                    {
                        "description": "Datos del trabajador a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Trabajador creado",
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Elimina un trabajador de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Eliminar un trabajador",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Trabajador",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trabajador eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Trabajador no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/trabajadores/search": {
            "get": {
                "description": "Devuelve un trabajador espec√≠fico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Obtener trabajador por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Trabajador",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trabajador encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    },
                    "404": {
                        "description": "Trabajador no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ApiResponse": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Cliente": {
            "type": "object",
            "properties": {
                "apellido": {
                    "type": "string"
                },
                "direccion": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "observaciones": {
                    "type": "string"
                },
                "pk_DOCUMENTO_CLIENTE": {
                    "type": "integer"
                },
                "telefono": {
                    "type": "string"
                }
            }
        },
        "models.Domicilio": {
            "type": "object",
            "properties": {
                "direccion": {
                    "type": "string"
                },
                "entregado": {
                    "type": "boolean"
                },
                "estado_PAGO": {
                    "type": "string"
                },
                "fecha": {
                    "type": "string"
                },
                "pk_ID_DOMICILIO": {
                    "type": "integer"
                },
                "telefono": {
                    "type": "string"
                }
            }
        },
        "models.Ingrediente": {
            "type": "object",
            "properties": {
                "ACTIVO": {
                    "type": "boolean"
                },
                "CALORIAS": {
                    "type": "integer"
                },
                "FOTO": {
                    "type": "string"
                },
                "NOMBRE": {
                    "type": "string"
                },
                "PESO": {
                    "type": "integer"
                },
                "PK_ID_INGREDIENTE": {
                    "type": "integer"
                },
                "PK_ID_INVENTARIO": {
                    "type": "integer"
                },
                "TIPO": {
                    "type": "string"
                }
            }
        },
        "models.Inventario": {
            "type": "object",
            "properties": {
                "CANTIDAD": {
                    "type": "integer"
                },
                "FECHA": {
                    "type": "string"
                },
                "PK_ID_INGREDIENTE": {
                    "type": "integer"
                },
                "PK_ID_INVENTARIO": {
                    "type": "integer"
                },
                "UNIDAD": {
                    "type": "integer"
                },
                "UNIDAD_MINIMA": {
                    "type": "integer"
                }
            }
        },
        "models.ItemPedido": {
            "type": "object",
            "properties": {
                "CANTIDAD": {
                    "type": "integer"
                },
                "PK_ID_ITEM_PEDIDO": {
                    "type": "integer"
                },
                "PK_ID_PEDIDO": {
                    "type": "integer"
                }
            }
        },
        "models.MetodoPago": {
            "type": "object",
            "properties": {
                "DETALLE": {
                    "type": "string"
                },
                "PK_ID_METODO_PAGO": {
                    "type": "integer"
                },
                "PK_ID_PAGO": {
                    "type": "integer"
                },
                "TIPO": {
                    "type": "string"
                }
            }
        },
        "models.Nomina": {
            "type": "object",
            "properties": {
                "ESTADO": {
                    "type": "string"
                },
                "FECHA": {
                    "type": "string"
                },
                "MONTO": {
                    "type": "integer"
                },
                "PK_ID_NOMINA": {
                    "type": "integer"
                },
                "PK_ID_RESTAURANTE": {
                    "type": "integer"
                }
            }
        },
        "models.Pago": {
            "type": "object",
            "properties": {
                "ESTADO": {
                    "type": "string"
                },
                "FECHA": {
                    "type": "string"
                },
                "HORA": {
                    "type": "string"
                },
                "MONTO": {
                    "type": "integer"
                },
                "PK_ID_METODO_PAGO": {
                    "type": "integer"
                },
                "PK_ID_PAGO": {
                    "type": "integer"
                }
            }
        },
        "models.Pedido": {
            "type": "object",
            "properties": {
                "delivery": {
                    "type": "boolean"
                },
                "estado": {
                    "type": "string"
                },
                "fecha": {
                    "type": "string"
                },
                "hora": {
                    "type": "string"
                },
                "pk_ID_DOMICILIO": {
                    "type": "integer"
                },
                "pk_ID_ITEM_PEDIDO": {
                    "type": "integer"
                },
                "pk_ID_PAGO": {
                    "type": "integer"
                },
                "pk_ID_PEDIDO": {
                    "type": "integer"
                },
                "pk_ID_RESTAURANTE": {
                    "type": "integer"
                }
            }
        },
        "models.PedidoCliente": {
            "type": "object",
            "properties": {
                "PK_DOCUMENTO_CLIENTE": {
                    "type": "integer"
                },
                "PK_ID_PEDIDO_CLIENTE": {
                    "type": "integer"
                },
                "PK_ID_RESTAURANTE": {
                    "type": "integer"
                }
            }
        },
        "models.Plato": {
            "type": "object",
            "properties": {
                "ACTIVO": {
                    "type": "boolean"
                },
                "CALORIAS": {
                    "type": "integer"
                },
                "DESCRIPCION": {
                    "type": "string"
                },
                "FOTO": {
                    "type": "string"
                },
                "NOMBRE": {
                    "type": "string"
                },
                "PERSONALIZADO": {
                    "type": "boolean"
                },
                "PK_ID_ITEM_PEDIDO": {
                    "type": "integer"
                },
                "PK_ID_PLATO": {
                    "type": "integer"
                },
                "PRECIO": {
                    "type": "integer"
                }
            }
        },
        "models.PlatoIngrediente": {
            "type": "object",
            "properties": {
                "CANTIDAD": {
                    "type": "integer"
                },
                "PK_ID_INGREDIENTE": {
                    "type": "integer"
                },
                "PK_ID_PLATO": {
                    "type": "integer"
                },
                "PK_ID_PLATO_INGREDIENTE": {
                    "type": "integer"
                }
            }
        },
        "models.Reserva": {
            "type": "object",
            "properties": {
                "estado": {
                    "type": "string"
                },
                "fecha": {
                    "type": "string"
                },
                "hora": {
                    "type": "string"
                },
                "personas": {
                    "type": "integer"
                },
                "pk_id_reserva": {
                    "type": "integer"
                },
                "pk_id_restaurante": {
                    "type": "integer"
                }
            }
        },
        "models.Restaurante": {
            "type": "object",
            "properties": {
                "dias_laborales": {
                    "type": "string"
                },
                "hora_apertura": {
                    "type": "string"
                },
                "nombre_restaurante": {
                    "type": "string"
                },
                "pk_id_restaurante": {
                    "type": "integer"
                }
            }
        },
        "models.Trabajador": {
            "type": "object",
            "properties": {
                "apellido": {
                    "type": "string"
                },
                "fecha_ingreso": {
                    "type": "string"
                },
                "fecha_nacimiento": {
                    "type": "string"
                },
                "fecha_retiro": {
                    "type": "string"
                },
                "nombre": {
                    "type": "string"
                },
                "nuevo": {
                    "type": "boolean"
                },
                "pk_documento_trabajador": {
                    "type": "integer"
                },
                "pk_id_restaurante": {
                    "type": "integer"
                },
                "rol": {
                    "type": "string"
                },
                "sueldo": {
                    "type": "integer"
                },
                "telefono": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.0.1",
	Host:             "",
	BasePath:         "/restaurante/v1",
	Schemes:          []string{},
	Title:            "Restaurante API",
	Description:      "API para gestionar el sistema de un restaurante para \"El fog√≥n de Mar√≠a\"",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
