// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "baluisto96@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/clientes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todos los clientes registrados en la base de datos, con opción de retornar solo nombre completo y teléfono.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Obtener todos los clientes con opción de filtrar campos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cantidad de resultados por página (por defecto es 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Número de registros a omitir desde el inicio (por defecto es 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Especifica los campos a incluir en la respuesta (opciones: 'nombre_completo_telefono')",
                        "name": "fields",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de clientes con los campos especificados",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un cliente existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Actualizar un cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Cliente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del cliente a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    },
                    "404": {
                        "description": "Cliente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo cliente en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Crear un nuevo cliente",
                "parameters": [
                    {
                        "description": "Datos del cliente a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Cliente creado",
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina un cliente de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Eliminar un cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Cliente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Cliente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/clientes/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve un cliente específico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "clientes"
                ],
                "summary": "Obtener cliente por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Cliente",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cliente encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Cliente"
                        }
                    },
                    "404": {
                        "description": "Cliente no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/domicilios": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todos los domicilios registrados en la base de datos, con opción de filtrar por dirección, teléfono y actualizado por.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Obtener todos los domicilios con posibilidad de filtrar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filtrar por dirección",
                        "name": "direccion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por teléfono",
                        "name": "telefono",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por fecha",
                        "name": "fecha",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por usuario que realizó la última actualización",
                        "name": "updated_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de domicilios",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Domicilio"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un domicilio existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Actualizar un domicilio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Domicilio",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del domicilio a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domicilio actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    },
                    "404": {
                        "description": "Domicilio no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo domicilio en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Crear un nuevo domicilio",
                "parameters": [
                    {
                        "description": "Datos del domicilio a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Domicilio creado",
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina un domicilio de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Eliminar un domicilio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Domicilio",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Domicilio eliminado"
                    },
                    "404": {
                        "description": "Domicilio no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/domicilios/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve un domicilio específico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domicilios"
                ],
                "summary": "Obtener domicilio por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Domicilio",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Domicilio encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Domicilio"
                        }
                    },
                    "404": {
                        "description": "Domicilio no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Permite iniciar sesión utilizando el documento y la contraseña, devuelve un JWT con el rol.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login"
                ],
                "summary": "Iniciar sesión para clientes o trabajadores",
                "parameters": [
                    {
                        "description": "Documento y Contraseña",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Inicio de sesión exitoso con token JWT",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "401": {
                        "description": "Credenciales inválidas",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/metodos_pago": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todos los métodos de pago registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Obtener todos los métodos de pago",
                "responses": {
                    "200": {
                        "description": "Lista de métodos de pago",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MetodoPago"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un método de pago existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Actualizar un método de pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Método de Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del método de pago a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Método de pago actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    },
                    "404": {
                        "description": "Método de pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo método de pago en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Crear un nuevo método de pago",
                "parameters": [
                    {
                        "description": "Datos del método de pago a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Método de pago creado",
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina un método de pago de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Eliminar un método de pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Método de Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Método de pago eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Método de pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/metodos_pago/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve un método de pago específico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metodos_pago"
                ],
                "summary": "Obtener método de pago por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Método de Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Método de pago encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.MetodoPago"
                        }
                    },
                    "404": {
                        "description": "Método de pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/nominas": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todas las nóminas registradas en la base de datos, con opción de filtrar por fecha exacta, mes y año.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Obtener todas las nóminas con filtros",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filtrar por fecha exacta (YYYY-MM-DD)",
                        "name": "fecha",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar por mes (1-12)",
                        "name": "mes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar por año (YYYY)",
                        "name": "anio",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de nóminas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Nomina"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de una nómina existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Actualizar una nómina",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Nómina",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos de la nómina a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nómina actualizada",
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    },
                    "404": {
                        "description": "Nómina no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea una nueva nómina en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Crear una nueva nómina",
                "parameters": [
                    {
                        "description": "Datos de la nómina a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Nómina creada",
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marca una nómina como \"NO PAGO\" en lugar de eliminarla físicamente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Eliminar una nómina (lógica)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Nómina",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nómina eliminada lógicamente",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Nómina no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/nominas/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve una nómina específica por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "nominas"
                ],
                "summary": "Obtener nómina por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Nómina",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nómina encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.Nomina"
                        }
                    },
                    "404": {
                        "description": "Nómina no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pagos": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todos los pagos registrados en la base de datos, con opción de filtrar por fecha exacta, mes, año y estado.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Obtener todos los pagos con filtros",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filtrar por fecha exacta (YYYY-MM-DD)",
                        "name": "fecha",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar por dia (1-31)",
                        "name": "dia",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar por mes (1-12)",
                        "name": "mes",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filtrar por año (YYYY)",
                        "name": "anio",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filtrar por estado del pago (PAGADO, PENDIENTE, NO PAGO)",
                        "name": "estado",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de pagos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pago"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un pago existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Actualizar un pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del pago a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pago actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "404": {
                        "description": "Pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo pago en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Crear un nuevo pago",
                "parameters": [
                    {
                        "description": "Datos del pago a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Pago creado",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina un pago de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Eliminar un pago",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pago eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pagos/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve un pago específico por ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pagos"
                ],
                "summary": "Obtener pago por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pago",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pago encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Pago"
                        }
                    },
                    "404": {
                        "description": "Pago no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedido_clientes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todas las relaciones entre pedidos y clientes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Obtener todas las relaciones pedido-cliente",
                "responses": {
                    "200": {
                        "description": "Lista de relaciones",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PedidoCliente"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de una relación existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Actualizar una relación pedido-cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relación",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos de la relación a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación actualizada",
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    },
                    "404": {
                        "description": "Relación no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea una nueva relación entre un pedido y un cliente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Crear una nueva relación pedido-cliente",
                "parameters": [
                    {
                        "description": "Datos de la relación a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Relación creada",
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina una relación de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Eliminar una relación pedido-cliente",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relación",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación eliminada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Relación no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedido_clientes/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve una relación específica por ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedido_clientes"
                ],
                "summary": "Obtener relación por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Relación",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relación encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.PedidoCliente"
                        }
                    },
                    "404": {
                        "description": "Relación no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedidos": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todos los pedidos registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Obtener todos los pedidos",
                "responses": {
                    "200": {
                        "description": "Lista de pedidos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pedido"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un pedido existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Actualizar un pedido",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del pedido a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pedido actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    },
                    "404": {
                        "description": "Pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo pedido en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Crear un nuevo pedido",
                "parameters": [
                    {
                        "description": "Datos del pedido a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Pedido creado",
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina un pedido de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Eliminar un pedido",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Pedido eliminado"
                    },
                    "404": {
                        "description": "Pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/pedidos/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve un pedido específico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pedidos"
                ],
                "summary": "Obtener pedido por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Pedido",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pedido encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Pedido"
                        }
                    },
                    "404": {
                        "description": "Pedido no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/productos": {
            "get": {
                "description": "Devuelve todos los productos registrados en la base de datos. Puedes incluir o excluir las imágenes con el parámetro ` + "`" + `includeImage` + "`" + ` y filtrar los productos activos con ` + "`" + `onlyActive` + "`" + `.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productos"
                ],
                "summary": "Obtener productos",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Incluir imágenes Base64 en la respuesta (true o false, por defecto es false)",
                        "name": "includeImage",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filtrar solo productos disponibles (true o false, por defecto es false)",
                        "name": "onlyActive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de productos",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Producto"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de un producto existente, incluyendo una imagen en formato Base64.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productos"
                ],
                "summary": "Actualizar un producto",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Producto",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nombre del producto",
                        "name": "NOMBRE",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Calorías del producto",
                        "name": "CALORIAS",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Descripción del producto",
                        "name": "DESCRIPCION",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Estado del producto",
                        "name": "ESTADO_PRODUCTO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Precio del producto",
                        "name": "PRECIO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del producto (opcional)",
                        "name": "IMAGEN",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Cantidad del producto",
                        "name": "CANTIDAD",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Producto actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    },
                    "404": {
                        "description": "Producto no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea un nuevo producto en la base de datos, incluyendo una imagen en formato Base64.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productos"
                ],
                "summary": "Crear un nuevo producto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nombre del producto",
                        "name": "NOMBRE",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Calorías del producto",
                        "name": "CALORIAS",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Descripción del producto",
                        "name": "DESCRIPCION",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Estado del producto",
                        "name": "ESTADO_PRODUCTO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Precio del producto",
                        "name": "PRECIO",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Imagen del producto (opcional)",
                        "name": "IMAGEN",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "description": "Cantidad del producto",
                        "name": "CANTIDAD",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Producto creado",
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Desactiva un producto en la base de datos (borrado lógico).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productos"
                ],
                "summary": "Desactivar un producto",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Producto",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Producto desactivado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Producto no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/productos/search": {
            "get": {
                "description": "Devuelve un producto específico por ID, incluyendo la imagen en formato Base64.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "productos"
                ],
                "summary": "Obtener producto por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Producto",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Producto encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Producto"
                        }
                    },
                    "404": {
                        "description": "Producto no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/reservas": {
            "get": {
                "description": "Devuelve todas las reservas registradas en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Obtener todas las reservas",
                "responses": {
                    "200": {
                        "description": "Lista de reservas",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Reserva"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Actualiza los datos de una reserva existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Actualizar una reserva",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Reserva",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos de la reserva a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reserva actualizada",
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    },
                    "404": {
                        "description": "Reserva no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Crea una nueva reserva en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Crear una nueva reserva",
                "parameters": [
                    {
                        "description": "Datos de la reserva a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reserva creada",
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Actualiza el estado de una reserva a \"CANCELADA\".",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Cancelar una reserva",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Reserva",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reserva cancelada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Reserva no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/reservas/search": {
            "get": {
                "description": "Devuelve una reserva específica por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reservas"
                ],
                "summary": "Obtener reserva por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la Reserva",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reserva encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.Reserva"
                        }
                    },
                    "404": {
                        "description": "Reserva no encontrada",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/restaurantes": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todos los restaurantes registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Obtener todos los restaurantes",
                "responses": {
                    "200": {
                        "description": "Lista de restaurantes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Restaurante"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un restaurante existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Actualizar un restaurante",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Restaurante",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del restaurante a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurante actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    },
                    "404": {
                        "description": "Restaurante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo restaurante en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Crear un nuevo restaurante",
                "parameters": [
                    {
                        "description": "Datos del restaurante a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Restaurante creado",
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina un restaurante de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Eliminar un restaurante",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Restaurante",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Restaurante eliminado"
                    },
                    "404": {
                        "description": "Restaurante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/restaurantes/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve un restaurante específico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "restaurantes"
                ],
                "summary": "Obtener restaurante por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Restaurante",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restaurante encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Restaurante"
                        }
                    },
                    "404": {
                        "description": "Restaurante no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/trabajadores": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve todos los trabajadores registrados en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Obtener todos los trabajadores",
                "responses": {
                    "200": {
                        "description": "Lista de trabajadores",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Trabajador"
                            }
                        }
                    },
                    "500": {
                        "description": "Error en la base de datos",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Actualiza los datos de un trabajador existente.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Actualizar un trabajador",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Trabajador",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Datos del trabajador a actualizar",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trabajador actualizado",
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    },
                    "404": {
                        "description": "Trabajador no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Crea un nuevo trabajador en la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Crear un nuevo trabajador",
                "parameters": [
                    {
                        "description": "Datos del trabajador a crear",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Trabajador creado",
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    },
                    "400": {
                        "description": "Error en la solicitud",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Elimina un trabajador de la base de datos.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Eliminar un trabajador",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Trabajador",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trabajador eliminado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    },
                    "404": {
                        "description": "Trabajador no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        },
        "/trabajadores/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Devuelve un trabajador específico por ID utilizando query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trabajadores"
                ],
                "summary": "Obtener trabajador por ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID del Trabajador",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trabajador encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.Trabajador"
                        }
                    },
                    "404": {
                        "description": "Trabajador no encontrado",
                        "schema": {
                            "$ref": "#/definitions/models.ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ApiResponse": {
            "type": "object",
            "properties": {
                "cause": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Cliente": {
            "type": "object",
            "properties": {
                "APELLIDO": {
                    "type": "string"
                },
                "DIRECCION": {
                    "type": "string"
                },
                "NOMBRE": {
                    "type": "string"
                },
                "OBSERVACIONES": {
                    "type": "string"
                },
                "PASSWORD": {
                    "type": "string"
                },
                "PK_DOCUMENTO_CLIENTE": {
                    "type": "integer"
                },
                "TELEFONO": {
                    "type": "string"
                }
            }
        },
        "models.Domicilio": {
            "type": "object",
            "properties": {
                "CREATED_AT": {
                    "type": "string"
                },
                "CREATED_BY": {
                    "type": "string"
                },
                "DIRECCION": {
                    "type": "string"
                },
                "ENTREGADO": {
                    "type": "boolean"
                },
                "ESTADO_PAGO": {
                    "type": "string"
                },
                "FECHA": {
                    "type": "string"
                },
                "OBSERVACIONES": {
                    "type": "string"
                },
                "PK_ID_DOMICILIO": {
                    "type": "integer"
                },
                "TELEFONO": {
                    "type": "string"
                },
                "UPDATED_AT": {
                    "type": "string"
                },
                "UPDATED_BY": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "documento": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.MetodoPago": {
            "type": "object",
            "properties": {
                "DETALLE": {
                    "type": "string"
                },
                "PK_ID_METODO_PAGO": {
                    "type": "integer"
                },
                "PK_ID_PAGO": {
                    "type": "integer"
                },
                "TIPO": {
                    "type": "string"
                }
            }
        },
        "models.Nomina": {
            "type": "object",
            "properties": {
                "ESTADO_NOMINA": {
                    "type": "string"
                },
                "FECHA": {
                    "type": "string"
                },
                "MONTO": {
                    "type": "integer"
                },
                "PK_ID_NOMINA": {
                    "type": "integer"
                }
            }
        },
        "models.Pago": {
            "type": "object",
            "properties": {
                "ESTADO_PAGO": {
                    "type": "string"
                },
                "FECHA": {
                    "type": "string"
                },
                "HORA": {
                    "type": "string"
                },
                "MONTO": {
                    "type": "integer"
                },
                "PK_ID_METODO_PAGO": {
                    "type": "integer"
                },
                "PK_ID_PAGO": {
                    "type": "integer"
                },
                "UPDATED_AT": {
                    "type": "string"
                },
                "UPDATED_BY": {
                    "type": "string"
                }
            }
        },
        "models.Pedido": {
            "type": "object",
            "properties": {
                "UPDATED_AT": {
                    "type": "string"
                },
                "UPDATED_BY": {
                    "type": "string"
                },
                "delivery": {
                    "type": "boolean"
                },
                "estado_PEDIDO": {
                    "type": "string"
                },
                "fecha": {
                    "type": "string"
                },
                "hora": {
                    "type": "string"
                },
                "pk_ID_DOMICILIO": {
                    "type": "integer"
                },
                "pk_ID_PAGO": {
                    "type": "integer"
                },
                "pk_ID_PEDIDO": {
                    "type": "integer"
                },
                "pk_ID_RESTAURANTE": {
                    "type": "integer"
                }
            }
        },
        "models.PedidoCliente": {
            "type": "object",
            "properties": {
                "PK_DOCUMENTO_CLIENTE": {
                    "type": "integer"
                },
                "PK_ID_PEDIDO": {
                    "type": "integer"
                },
                "PK_ID_PEDIDO_CLIENTE": {
                    "type": "integer"
                }
            }
        },
        "models.Producto": {
            "type": "object",
            "properties": {
                "CALORIAS": {
                    "type": "integer"
                },
                "CANTIDAD": {
                    "type": "integer"
                },
                "DESCRIPCION": {
                    "type": "string"
                },
                "ESTADO_PRODUCTO": {
                    "type": "string"
                },
                "IMAGEN": {
                    "type": "string"
                },
                "NOMBRE": {
                    "type": "string"
                },
                "PK_ID_PRODUCTO": {
                    "type": "integer"
                },
                "PRECIO": {
                    "type": "integer"
                }
            }
        },
        "models.Reserva": {
            "type": "object",
            "properties": {
                "CREATED_AT": {
                    "type": "string"
                },
                "CREATED_BY": {
                    "type": "string"
                },
                "ESTADO_RESERVA": {
                    "type": "string"
                },
                "FECHA": {
                    "type": "string"
                },
                "HORA": {
                    "type": "string"
                },
                "INDICACIONES": {
                    "type": "string"
                },
                "PERSONAS": {
                    "type": "integer"
                },
                "PK_ID_RESERVA": {
                    "type": "integer"
                },
                "UPDATED_AT": {
                    "type": "string"
                },
                "UPDATED_BY": {
                    "type": "string"
                }
            }
        },
        "models.Restaurante": {
            "type": "object",
            "properties": {
                "PK_ID_CAMBIO_HORARIO": {
                    "type": "integer"
                },
                "PK_ID_RESERVA": {
                    "description": "TODO: ESTÁ AL REVÉS",
                    "type": "integer"
                },
                "dias_laborales": {
                    "type": "string"
                },
                "hora_apertura": {
                    "type": "string"
                },
                "nombre_restaurante": {
                    "type": "string"
                },
                "pk_id_restaurante": {
                    "type": "integer"
                }
            }
        },
        "models.Trabajador": {
            "type": "object",
            "properties": {
                "APELLIDO": {
                    "type": "string"
                },
                "FECHA_INGRESO": {
                    "type": "string"
                },
                "FECHA_NACIMIENTO": {
                    "type": "string"
                },
                "FECHA_RETIRO": {
                    "type": "string"
                },
                "HORARIO": {
                    "type": "string"
                },
                "NOMBRE": {
                    "type": "string"
                },
                "NUEVO": {
                    "type": "boolean"
                },
                "PASSWORD": {
                    "type": "string"
                },
                "PK_DOCUMENTO_TRABAJADOR": {
                    "type": "integer"
                },
                "PK_ID_RESTAURANTE": {
                    "type": "integer"
                },
                "ROL": {
                    "type": "string"
                },
                "SUELDO": {
                    "type": "integer"
                },
                "TELEFONO": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0.0",
	Host:             "",
	BasePath:         "/restaurante/v1",
	Schemes:          []string{},
	Title:            "Restaurante API",
	Description:      "API para gestionar el sistema de un restaurante para \"El fogón de María\"",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
